; true
(if true true (raise "exception: false"))
(if 1 true (raise "exception: false"))
(if 0 true (raise "exception: false"))
(if -1 true (raise "exception: false"))
(if "true" true (raise "exception: false"))
(if "false" true (raise "exception: false"))
(if "" true (raise "exception: false"))
(if (func (falsey) false) true (raise "exception: false"))
(if ((func (f x) true) false) true (raise "exception: false"))
(if ((func (f x) { x true }) false) true (raise "exception: false"))
(if (begin false false false false false 1) true (raise "exception: false"))
(if { (set x 1) (set y x) } true (raise "exception: false"))
(if (if false false true) true (raise "exception: false"))
(if (try { false (raise "false") } 3) true (raise "exception: false"))
; false
(if false (raise "exception: true") false)
(if () (raise "exception: true") false)
(if ((func (poop crap) ()) 76) (raise "exception: true") false)
(if { (set x false) (set y x) } (raise "exception: true") false)
(set x 100000)
(if (while (!= x 0) (set x (- x 1))) (raise "exception: true") false)

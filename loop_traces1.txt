[1;35m        x 1[0m: [".alloc"+0]T["RiRuntime.init"+48]nT
[1;35m        x 2[0m: [".alloc"+0]TT["RiRuntime.init"+48]nT
[1;35m        x 1[0m: [".alloc"+0]TT["RiRuntime.init"+48]T["Main.main"+0]["Main.getOptions"+0]
[1;35m        x 1[0m: [".alloc"+0]TT["HashMap<Array<byte>, Opt>.insert"+0]T["HashMap<Array<byte>, Opt>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m        x 1[0m: [".alloc"+0]TTT["Vector<Array<byte>>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TTTT["Option<bool>.parse"+0]["BasicOptions.parseBool"+0]n["Options.parse"+35]TnT["Options.isOptionPrefix"+0]TT["Options.isOptionPrefix"+27]Tn["Options.parseOption"+0]["Options.parseOption"+7]TnTn["Arrays.range<byte>"+0]T
[1;35m       x 14[0m: [".alloc"+0]TTTT["Parser.readExpr"+1504]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 6[0m: [".alloc"+0]TTTT["Parser.readExpr"+1504]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 5[0m: [".alloc"+0]TTTT["Parser.readExpr"+1504]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<Array<byte>>.copy"+0]TT
[1;35m       x 33[0m: [".alloc"+0]TTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m       x 15[0m: [".alloc"+0]TTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nn
[1;35m       x 15[0m: [".alloc"+0]TTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]TTTT
[1;35m       x 29[0m: [".alloc"+0]TTTT["Parser.readExpr"+212]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 14[0m: [".alloc"+0]TTTT["Parser.readExpr"+212]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]TTTT["Parser.readExpr"+212]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 22[0m: [".alloc"+0]TTTT["Parser.readCode"+403]n["Vector<(Array<byte>, Box<AccessMode>)>.extract"+0]TTTT
[1;35m        x 2[0m: [".alloc"+0]TTTT["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TnT["Vector<(Array<byte>, Box<AccessMode>)>.put"+0]Tn["Arrays.grow<(Array<byte>, Box<AccessMode>)>"+0]TnT
[1;35m       x 29[0m: [".alloc"+0]TTTTTT["Vector<Array<byte>>.putr"+177]T["BytecodeCompiler.compileAST"+0]TT,br_table(10)T["CodeObject.compile"+0]TTT
[1;35m       x 17[0m: [".alloc"+0]TTTTTT["Vector<Array<byte>>.putr"+177]T["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]n["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]nT
[1;35m       x 25[0m: [".alloc"+0]TTTTTT["Vector<Array<byte>>.putr"+177]T["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m       x 43[0m: [".alloc"+0]TTTTTT["Vector<Array<byte>>.putr"+177]T["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]TTTTTT["Vector<Array<byte>>.putr"+177]T["BytecodeCompiler.compileAST"+0]TT,br_table(15)TTTTn["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TTTTTT["Vector<Object>.putr"+177]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m       x 14[0m: [".alloc"+0]TTTTTT["Vector<Object>.putr"+177]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m        x 2[0m: [".alloc"+0]TTTTTT["Vector<Object>.putr"+177]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m      x 116[0m: [".alloc"+0]TTTTT["DataWriter.putbbb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]nT
[1;35m       x 29[0m: [".alloc"+0]TTTT["FuncObjects.newFO"+0]
[1;35m        x 1[0m: [".alloc"+0]TTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]TTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTn
[1;35m        x 3[0m: [".alloc"+0]TTTT["Parser.readExpr"+654]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m    x 95999[0m: [".alloc"+0]TTTT["Object.initClass"+310]T["Vector<ClassObject>.reverse"+0]TTTTTT["Ranges.reverse<ClassObject>"+0]["Ranges.reverse<ClassObject>"+14]T["Vector<ClassObject>.copy"+0]TT
[1;35m       x 28[0m: [".alloc"+0]TTTT["BytecodeFrame.evalBytecode"+2905]T["Vector<ClassObject>.reverse"+0]TTTTTT["Ranges.reverse<ClassObject>"+0]["Ranges.reverse<ClassObject>"+14]T["Vector<ClassObject>.extract"+0]TTTT
[1;35m       x 93[0m: [".alloc"+0]TTT["Strings.split_internal<void>"+128]TTT["Arrays.range<byte>"+0]T
[1;35m       x 11[0m: [".alloc"+0]TTT["Strings.split_internal<void>"+128]Tnn["cicero$closure3<(Array<byte>, byte -> bool, int) -> bool, Array<byte>, byte -> bool>.m23762"+0]T[#985+0]["Strings.split_char_cond"+0]TT["cicero$closure2<(byte, byte) -> bool, byte>.m23677"+0]["cicero$global.m23385"+0]n["Arrays.range<byte>"+0]T
[1;35m      x 384[0m: [".alloc"+0]TTT["Vector<Array<byte>>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]TTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]TTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 13[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 20[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(1)
[1;35m        x 2[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]TTTT
[1;35m        x 2[0m: [".alloc"+0]TTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]TTT["Strings.parseLiteral"+82]nTTTn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTnT["TextReader.advance"+0]["TextReader.at"+0]n["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]nnT
[1;35m        x 1[0m: [".alloc"+0]TTT["Strings.parseLiteral"+82]nTTTn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTnT["TextReader.advance"+0]["TextReader.at"+0]n["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnnT
[1;35m        x 3[0m: [".alloc"+0]TTT["Strings.parseLiteral"+82]nTTTn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTnT["TextReader.advance"+0]["TextReader.at"+0]n["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT
[1;35m        x 1[0m: [".alloc"+0]TTT["Strings.parseLiteral"+82]nTTTTTT["StringBuilder.putc"+0]["StringBuilder.acquire"+0]TTn["Arrays.grow<byte>"+0]TnT
[1;35m       x 13[0m: [".alloc"+0]TTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]TTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m       x 88[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m       x 53[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 3[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]nT
[1;35m        x 4[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]Tn["Arrays.grow<FileRange>"+0]TnT
[1;35m       x 70[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]n["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]nT
[1;35m       x 17[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TTT["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TTT["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 5[0m: [".alloc"+0]TTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#794+0]["Maybe.Just<ClassKeyword><ClassKeyword>.isNothing"+0]T[#798+0]["Maybe.Just<ClassKeyword><ClassKeyword>.fromJust"+0]TTn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]TTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 7[0m: [".alloc"+0]TTT["Parser.readExpr"+3505]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]TTT["Parser.readExpr"+3505]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<Array<byte>>.copy"+0]TT
[1;35m        x 6[0m: [".alloc"+0]TTTnT["BytecodeCompiler.compileAST"+1946]nT
[1;35m       x 16[0m: [".alloc"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 2[0m: [".alloc"+0]TTT["BytecodeCompiler.compileAST"+2125]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m       x 17[0m: [".alloc"+0]TTT["BytecodeFrame.evalBytecode"+3588]T["Vector<Object>.reverse"+0]TTTTTT["Ranges.reverse<Object>"+0]["Ranges.reverse<Object>"+14]T
[1;35m        x 2[0m: [".alloc"+0]TTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m     x 6511[0m: [".alloc"+0]TTT["FrameObject.assertArity<Object>"+0]n["FrameObject.isExn"+0]TT["FrameObject.newFrame"+0]["FrameObjects.newFrame"+0]TTTT
[1;35m    x 14108[0m: [".alloc"+0]TTT["FrameObject.assertArity<Object>"+0]n["FrameObject.isExn"+0]TT["FrameObject.newFrame"+0]["FrameObjects.newFrame"+0]TTTn
[1;35m   x 192453[0m: [".alloc"+0]TTT["BytecodeFrame.evalBytecode"+1508]T["Vector<Object>.reverse"+0]TTTTTT["Ranges.reverse<Object>"+0]["Ranges.reverse<Object>"+14]T["ArrayStack<Object>.pop"+0]nTTTTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]nTT
[1;35m   x 201081[0m: [".alloc"+0]TTT["BytecodeFrame.evalBytecode"+1508]T["Vector<Object>.reverse"+0]TTTTTT["Ranges.reverse<Object>"+0]["Ranges.reverse<Object>"+14]T["ArrayStack<Object>.pop"+0]nTTTTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnT
[1;35m        x 1[0m: [".alloc"+0]TT["HashMap<Array<byte>, Object>.insert"+0]T["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m       x 51[0m: [".alloc"+0]TT["Parser.readCode"+42]nT
[1;35m        x 4[0m: [".alloc"+0]TT["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m       x 37[0m: [".alloc"+0]TT["HashMap<Array<byte>, Box<AccessMode>>.insert"+0]T["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m       x 29[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(24)TTTTT
[1;35m       x 17[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 3[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 4[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 2[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(19)["ArrayStack<Object>.pop"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTn
[1;35m        x 1[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(20)
[1;35m        x 1[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m        x 4[0m: [".alloc"+0]TT["BytecodeFrame.evalCode"+0]["ArrayStack<Object>.clear"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTT["cicero$closure5<(Array<byte>, ClassObject, CodeObject, Array<(Array<byte>, CodeObject)>, Array<FuncObject>) -> ClassObject, Array<byte>, CodeObject, Array<(Array<byte>, CodeObject)>, Array<FuncObject>>.m23738"+0]["cicero$global.m23387"+0]
[1;35m        x 1[0m: [".alloc"+0]TT["HashMap<Array<byte>, StrObject>.insert"+0]T["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m        x 7[0m: [".alloc"+0]TT["Arrays.prepend<Array<byte>>"+89]T["CodeObject.compile"+0]TTT
[1;35m    x 95999[0m: [".alloc"+0]TT["HashMap<Array<byte>, int>.insert"+0]T["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m        x 1[0m: [".alloc"+0]TT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]TT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]Tn["Arrays.grow<FileRange>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]TT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]Tn["Arrays.grow<FileRange>"+0]TnT
[1;35m    x 30574[0m: [".alloc"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m    x 30354[0m: [".alloc"+0]TT["StringBuilder.puts"+0]T["StringBuilder.acquire"+0]nT
[1;35m     x 3798[0m: [".alloc"+0]TT["BigInteger.subtractMag"+65]T["BigInteger.subtractMag"+240]T["BigInteger.subtractMag"+349]T["BigInteger.stripLeadingZeros"+0]["BigInteger.stripLeadingZeros"+9]TnTTnn
[1;35m     x 1996[0m: [".alloc"+0]TT["BigInteger.shiftRightImplWorker"+0]T["BigInteger.shiftRightImplWorker"+38]TT
[1;35m        x 1[0m: [".alloc"+0]T["BasicOptions.new"+0]["Options.new"+0]["Strings.newMap<Opt>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, Opt>.new"+0]
[1;35m        x 1[0m: [".alloc"+0]T["BasicOptions.newBoolOption"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Option<bool>.new"+0]["Opt.new"+0]["Options.add<bool>"+0]TT["HashMap<Array<byte>, Opt>.[]="+0]nn
[1;35m        x 3[0m: [".alloc"+0]T["Option<bool>.new"+0]["Opt.new"+0]["Options.add<bool>"+0]TT["HashMap<Array<byte>, Opt>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Opt>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Opt>.[]="+264]TTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Opt>.new"+0]["BasicOptions.newIntOption"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Opt>.new"+0]["HashMap<Array<byte>, Opt>.insert"+0]T["HashMap<Array<byte>, Opt>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["BasicOptions.newBoolOption"+0]
[1;35m        x 2[0m: [".alloc"+0]T["Bucket<Array<byte>, Opt>.new"+0]T["BasicOptions.newBoolOption"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Opt>.new"+0]TT["Options.parse"+0]T["Options.parse"+35]TnT["Options.isOptionPrefix"+0]TT["Options.isOptionPrefix"+27]Tn["Options.parseOption"+0]["Options.parseOption"+7]TT["Arrays.range<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Option<int>.new"+0]["Opt.new"+0]["Options.add<int>"+0]TT["HashMap<Array<byte>, Opt>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnn
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.range<byte>"+45]TT["HashMap<Array<byte>, Opt>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTT["Options.setOption0"+0]["Vector<Array<byte>>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.range<byte>"+45]TT["HashMap<Array<byte>, Opt>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTT["Options.setOption0"+0]["Vector<Array<byte>>.put"+0]TTTTT["Option<int>.parse"+0]["BasicOptions.parseInt"+0]["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTT["Ints.parseDecM"+163]TTTnn["Options.parse"+35]TnT["Options.isOptionPrefix"+0]TT["Options.isOptionPrefix"+27]nTTTTT["Arrays.range<Array<byte>>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.range<byte>"+45]TT["TextReader.advance"+0]["TextReader.at"+0]n["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]TT["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, StrObject>.has"+99]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["Arrays.range<byte>"+0]T
[1;35m      x 488[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["Vector<Array<byte>>.put"+0]nT
[1;35m      x 104[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["Vector<Array<byte>>.put"+0]TTTT["Vector<Array<byte>>.extract"+0]TTTT
[1;35m       x 11[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["Vector<Array<byte>>.put"+0]TTTT["Strings.split_internal<void>"+128]TTT["Arrays.range<byte>"+0]T
[1;35m    x 32226[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]["Strings.format1<long>"+0]
[1;35m    x 18904[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]T
[1;35m        x 3[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]T["Vector<Object>.set"+0]T["Vector<Object>.grow"+0]TTTTTT["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m      x 476[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]T["Vector<Object>.set"+0]T["Vector<Object>.grow"+0]TTTTTT["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m     x 1405[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]T["Vector<Object>.set"+0]T["Vector<Object>.grow"+0]TTTTTT["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 5111[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]T["Vector<Object>.get"+0]nnTT["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m     x 2103[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]T["Vector<Object>.get"+0]nnTT["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 1290[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]T["Vector<Object>.get"+0]nnTT["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]["BigInteger.shiftRight"+0]Tn["BigInteger.shiftRightImpl"+0]TTTTTnT
[1;35m     x 1996[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T["BigInteger.trace"+0]["BigInteger.shiftRight"+0]Tn["BigInteger.shiftRightImpl"+0]TTTTTTT
[1;35m      x 160[0m: [".alloc"+0]T["Arrays.range<byte>"+45]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.range<Array<byte>>"+45]TT["HashMap<Array<byte>, Opt>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTT["Option<bool>.get"+0]["FrameObjects.newTopFrame"+0]n
[1;35m   x 222929[0m: [".alloc"+0]T["BytecodeFrame.new"+0]
[1;35m   x 222929[0m: [".alloc"+0]T["ArrayStack<Object>.new"+0]
[1;35m   x 222929[0m: [".alloc"+0]T["ArrayStack<(int, int)>.new"+0]
[1;35m   x 222929[0m: [".alloc"+0]T["FrameObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]n["Strings.newMap<Object>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["HashMap<Array<byte>, StrObject>.[]="+0]nn
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["HashMap<Array<byte>, StrObject>.[]="+0]TTT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnn
[1;35m        x 2[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["HashMap<Array<byte>, StrObject>.[]="+0]TTT["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, StrObject>.[]="+250]TTT
[1;35m       x 13[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["BytecodeFrame.evalBytecode"+4139]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m       x 12[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["BytecodeFrame.evalBytecode"+4139]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 2[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["BytecodeFrame.evalBytecode"+4139]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 2[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["BytecodeFrame.evalBytecode"+4139]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 6[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]T["Arrays.map<ASTData.Func, FuncObject>"+44]T["ClassObjects.classhole"+0]
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]T["Arrays.map<ASTData.Func, FuncObject>"+44]n[#851+0]["BytecodeCompiler.funcToFunc"+0]TTT["Arrays.prepend<Array<byte>>"+0]TTT
[1;35m        x 2[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]T["Arrays.map<ASTData.Func, FuncObject>"+44]n[#851+0]["BytecodeCompiler.funcToFunc"+0]TTT["Arrays.prepend<Array<byte>>"+0]TTnT
[1;35m   x 222928[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]TTTTTTT
[1;35m   x 191385[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]TT["VirgilFrame.eval"+0]["Arrays.map<(Array<byte>, Object), Object>"+0]T
[1;35m    x 14108[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]TT["ASTFrame.new"+45]nT["HashMap<Array<byte>, Object>.[]="+0]nn
[1;35m    x 46496[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]T["HashMap<Array<byte>, int>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]n
[1;35m    x 13101[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]T["HashMap<Array<byte>, int>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTT["FrameObject.isExn"+0]T["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]n
[1;35m        x 6[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["Vector<Object>.extract"+0]TTn["Vector<Object>.puta"+0]T["Vector<Object>.putk"+0]TTTTT["Vector<Object>.putr"+0]nT
[1;35m       x 16[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["Vector<Object>.extract"+0]TTTT
[1;35m       x 28[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["Object.initClass"+0]TTTTTTTTTTTT
[1;35m    x 36293[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m        x 6[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, Object>.new"+0]n
[1;35m    x 14108[0m: [".alloc"+0]T["HashMap<Array<byte>, Object>.new"+0]["Strings.newMap<Object>"+0]
[1;35m    x 14108[0m: [".alloc"+0]T["HashMap<Array<byte>, Object>.new"+0]["FrameObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["FrameObjects.newTopFrame"+74]nnT["HashMap<Array<byte>, Object>.[]="+0]nn
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]["FrameObjects.newTopFrame"+74]nnT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnn
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]["HashMap<Array<byte>, Object>.insert"+0]T["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["FrameObjects.newTopFrame"+74]nnT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 7[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["FrameObjects.newTopFrame"+74]nnT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["FrameObjects.newTopFrame"+74]nnT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, Object>.[]="+260]TTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["FrameObjects.newTopFrame"+74]T["Main.loadCore"+0]
[1;35m       x 15[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]T["Main.loadCore"+51]nnT
[1;35m       x 43[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TTnn["Main.main"+610]nnT
[1;35m       x 65[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["HashMap<Array<byte>, Object>.balance"+96]n["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["HashMap<Array<byte>, Object>.balance"+96]T["HashMap<Array<byte>, Object>.balance"+69]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]T["Main.loadCore"+51]nnT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]T["HashMap<Array<byte>, Object>.balance"+96]T["HashMap<Array<byte>, Object>.balance"+69]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]T["Main.loadCore"+51]TTT["HashMap<Array<byte>, Opt>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTT["Option<bool>.get"+0]T["Main.main"+505]n["System.fileLoad"+0]["System.toPath"+0]TTTTTT
[1;35m        x 2[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]nTn["HashMap<Array<byte>, Object>.balance"+0]TT
[1;35m    x 13101[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]["ASTFrame.new"+45]TT["ASTFrame.new"+138]TT["ASTFrame.eval"+0]TTTT["ASTFrame.evalAST"+0]TT,br_table(1)TnT["HashMap<Array<byte>, Object>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 1007[0m: [".alloc"+0]T["Bucket<Array<byte>, Object>.new"+0]["ASTFrame.new"+45]TT["ASTFrame.new"+138]TT["ASTFrame.eval"+0]TTTT["ASTFrame.evalAST"+0]TT,br_table(1)TnT["HashMap<Array<byte>, Object>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTTT["FrameObject.isExn"+0]TTTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT
[1;35m        x 2[0m: [".alloc"+0]T["Parser.new"+0]
[1;35m        x 2[0m: [".alloc"+0]T["ArrayStack<Vars>.new"+0]
[1;35m        x 2[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["TextReader.new"+0]T
[1;35m       x 54[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]nn
[1;35m       x 17[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnn
[1;35m        x 9[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]TTT
[1;35m        x 2[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]TTT
[1;35m       x 80[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]TTT
[1;35m       x 20[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnn
[1;35m       x 32[0m: [".alloc"+0]T["Box<AccessMode>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]TTT
[1;35m        x 1[0m: [".alloc"+0]TnT[#876+0]["cicero$global.m23383"+0]T["TextReader.skipWhitespace"+0]["TextReader.skipWhitespace"+40]nTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]TnT[#876+0]["cicero$global.m23383"+0]T["TextReader.skipWhitespace"+0]["TextReader.skipWhitespace"+40]nTTTTT["TextReader.at"+0]n["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTnT["Vector<int>.put"+0]nT
[1;35m    x 12965[0m: [".alloc"+0]TnTTT["BigInteger.addMag"+409]T["BigInteger.addMag"+518]TT
[1;35m      x 750[0m: [".alloc"+0]T["TextReader.tokenFor"+52]T
[1;35m       x 55[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT
[1;35m       x 20[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Parser.contains"+0]["Parser.contains"+7]TTT["Vector<Array<byte>>.put"+0]nT
[1;35m        x 6[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Parser.contains"+0]["Parser.contains"+7]TTT["Vector<Array<byte>>.put"+0]TTTTT["Parser.readExpr"+1504]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Parser.contains"+0]["Parser.contains"+7]TTT["Vector<Array<byte>>.put"+0]TTTTT["Parser.readExpr"+1504]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 27[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Vector<Array<byte>>.copy"+0]TT
[1;35m      x 268[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Strings.split"+0]TTnT
[1;35m       x 53[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 59[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTTT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 6[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(14)["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m      x 220[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]nT["Strings.split"+0]TTnT
[1;35m        x 5[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]nT["Parser.contains"+0]["Parser.contains"+7]TTT["Vector<Array<byte>>.put"+0]nT
[1;35m        x 6[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]nT
[1;35m        x 4[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 14[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 5[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]nn
[1;35m        x 1[0m: [".alloc"+0]T["Token.new"+0]["FilePoint.new"+0]["TextReader.advance"+0]["TextReader.at"+0]n
[1;35m       x 20[0m: [".alloc"+0]T["Parser.readExpr"+1504]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 5[0m: [".alloc"+0]T["Parser.readExpr"+1504]["TextReader.opt1"+0]Tn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 4[0m: [".alloc"+0]T["Parser.readExpr"+1504]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<Array<byte>>.copy"+0]n
[1;35m       x 34[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T["Parser.readCode"+0]
[1;35m       x 25[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T["CodeObjects.fromAST"+0]T
[1;35m       x 56[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T["Vector<Object>.extract"+0]n
[1;35m       x 42[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T["Vector<Object>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T["Vector<Object>.extract"+0]TTn["Vector<ClassObject -> ClassObject>.extract"+0]n
[1;35m        x 9[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]TTTTTT["Ranges.dup<Array<byte>>"+0]T
[1;35m       x 14[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T["Vector<Array<byte>>.extract"+0]n
[1;35m      x 488[0m: [".alloc"+0]T["Arrays.copy<Array<byte>>"+0]TTn["Arrays.copy<Array<byte>>"+52]T
[1;35m       x 55[0m: [".alloc"+0]T["Vars.new"+0]["Strings.newMap<Box<AccessMode>>"+0]
[1;35m       x 55[0m: [".alloc"+0]T["HashMap<Array<byte>, Box<AccessMode>>.new"+0]
[1;35m       x 27[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["Parser.readCode"+42]nT
[1;35m        x 3[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 10[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTTTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n
[1;35m        x 4[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nn
[1;35m       x 14[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.insert"+0]T["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.insert"+0]T["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.insert"+0]T["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTnT["Vector<int>.put"+0]Tn["Arrays.grow<int>"+0]TnT
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.insert"+0]T["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["Parser.readCode"+42]nT
[1;35m       x 10[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]["HashMap<Array<byte>, Box<AccessMode>>.insert"+0]T["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m      x 116[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]T
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]T["Parser.readCode"+42]T["ArrayStack<Vars>.push"+0]TTTT["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]T["Parser.readCode"+42]nT
[1;35m      x 488[0m: [".alloc"+0]T["Strings.splitOnChar"+0]
[1;35m      x 488[0m: [".alloc"+0]T["Strings.split_internal<void>"+0]TTTn
[1;35m      x 104[0m: [".alloc"+0]T["Strings.split_internal<void>"+128]Tnn["cicero$closure3<(Array<byte>, byte -> bool, int) -> bool, Array<byte>, byte -> bool>.m23762"+0]T[#985+0]["Strings.split_char_cond"+0]TT["cicero$closure2<(byte, byte) -> bool, byte>.m23677"+0]["cicero$global.m23385"+0]n["Arrays.range<byte>"+0]T
[1;35m      x 384[0m: [".alloc"+0]T["Strings.split_internal<void>"+128]TTT["Arrays.range<byte>"+0]T
[1;35m      x 275[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT
[1;35m        x 2[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m       x 22[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 4[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnnT
[1;35m        x 7[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 5[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTnTT["ArrayStack<Vars>.peek"+0]Tn
[1;35m       x 40[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTTT["Ints.parseDecM"+163]TTTnnTn["IntObjects.fromLong"+0]["BigIntegers.fromLong"+0]TTn
[1;35m       x 30[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TnnTTnnnTn["IntObjects.fromLong"+0]["BigIntegers.fromLong"+0]n
[1;35m        x 4[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnnT
[1;35m       x 24[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m       x 36[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m       x 31[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 1[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 2[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]nnT
[1;35m        x 1[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTT["Ints.parseDecM"+0]TTnTTTnTT["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 1[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTn["Ints.parseDecM"+0]TnnTTTT["Ints.parseDecM"+163]TTTnnTnTn["IntObjects.fromLong"+0]["BigIntegers.fromLong"+0]Tnn
[1;35m        x 1[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTn["Ints.parseDecM"+0]TnT["Ints.parseDecM"+163]TTTTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 1[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]TT["Ints.parseDecimal"+0]TTTn["Ints.parseDecM"+0]TnT["Ints.parseDecM"+163]TTTTT["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnnT
[1;35m       x 25[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]["Vector<Array<byte>>.extract"+0]TTTT
[1;35m        x 4[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]["Vector<Array<byte>>.extract"+0]n
[1;35m        x 6[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]["Vector<(Array<byte>, CodeObject)>.extract"+0]TTTT
[1;35m      x 408[0m: [".alloc"+0]T["FileRange.new"+0]["FilePoint.new"+0]
[1;35m      x 115[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]Tn
[1;35m      x 127[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT
[1;35m       x 95[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]TTTT
[1;35m        x 5[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m        x 3[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTn
[1;35m       x 31[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]TTTT
[1;35m       x 12[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m       x 14[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+212]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Vector<AST>.put"+0]Tn["Arrays.grow<AST>"+0]TnT
[1;35m       x 20[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 49[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 3[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 4[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nn
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 12[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n
[1;35m       x 22[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m       x 10[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnnT
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 3[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTT
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]nnT
[1;35m        x 4[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#794+0]["Maybe.Just<ClassKeyword><ClassKeyword>.isNothing"+0]T[#798+0]["Maybe.Just<ClassKeyword><ClassKeyword>.fromJust"+0]TTn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 47[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 5[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTT
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTnT["Vector<int>.put"+0]Tn["Arrays.grow<int>"+0]TnT
[1;35m       x 10[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+5466]TT["Parser.readCode"+146]T["ArrayStack<Vars>.pop"+0]nTT
[1;35m       x 45[0m: [".alloc"+0]T["AST.new"+0]["Parser.readCode"+146]T["ArrayStack<Vars>.pop"+0]nTT
[1;35m       x 61[0m: [".alloc"+0]T["AST.new"+0]n["CodeObjects.fromAST"+0]T
[1;35m       x 56[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]nT
[1;35m       x 20[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m        x 7[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]TTTT
[1;35m       x 55[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 20[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(1)
[1;35m        x 8[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 16[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m        x 7[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTn
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nn
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]TTTTT["Parser.readExpr"+4833]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTn
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["Vector<AST>.put"+0]Tn["Arrays.grow<AST>"+0]TnT
[1;35m       x 47[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 9[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m       x 13[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTT
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 3[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<(AST, AST)>.extract"+0]TTTT
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Vector<(AST, AST)>.put"+0]nT
[1;35m        x 6[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 3[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTT
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTnT["Vector<int>.put"+0]Tn["Arrays.grow<int>"+0]TnT
[1;35m        x 2[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 4[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 9[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]TTTTTTn["Parser.readString"+0]["Strings.parseLiteral"+0]TTTn
[1;35m       x 17[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]TTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 6[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 3[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(12)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 8[0m: [".alloc"+0]T["AST.new"+0]["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTn
[1;35m       x 39[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 55[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 5[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTn["Parser.readString"+0]["Strings.parseLiteral"+0]TTTn
[1;35m        x 4[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 11[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]n
[1;35m        x 7[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Vector<AST>.extract"+0]n
[1;35m        x 3[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTn
[1;35m        x 1[0m: [".alloc"+0]T["Parser.readExpr"+212]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]TT["TextReader.at"+0]TTT["Vector<AST>.extract"+0]n
[1;35m      x 147[0m: [".alloc"+0]T["Arrays.copy<AST>"+0]TTn["Arrays.copy<AST>"+52]T
[1;35m       x 55[0m: [".alloc"+0]T["Maps.keyList<Array<byte>, Box<AccessMode>>"+0]T
[1;35m       x 37[0m: [".alloc"+0]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+0]TT["HashMap<Array<byte>, Box<AccessMode>>.apply"+71]n["HashMap<Array<byte>, Box<AccessMode>>.apply"+98]n["MapKeyListGatherer<Array<byte>, Box<AccessMode>>.add"+0]
[1;35m       x 17[0m: [".alloc"+0]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+0]nTT["MapKeyListGatherer<Array<byte>, Box<AccessMode>>.add"+0]
[1;35m        x 1[0m: [".alloc"+0]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+0]nn["Parser.readCode"+403]n["Vector<(Array<byte>, Box<AccessMode>)>.extract"+0]n
[1;35m      x 160[0m: [".alloc"+0]T["List<Array<byte>>.new"+0]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+98]n["MapKeyListGatherer<Array<byte>, Box<AccessMode>>.add"+0]
[1;35m       x 13[0m: [".alloc"+0]T["List<Array<byte>>.new"+0]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+98]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+71]T["Parser.readCode"+403]n["Vector<(Array<byte>, Box<AccessMode>)>.extract"+0]n
[1;35m       x 24[0m: [".alloc"+0]T["List<Array<byte>>.new"+0]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+98]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+71]T["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TnT["Vector<(Array<byte>, Box<AccessMode>)>.put"+0]nT
[1;35m       x 17[0m: [".alloc"+0]T["List<Array<byte>>.new"+0]["Parser.readCode"+403]n["Vector<(Array<byte>, Box<AccessMode>)>.extract"+0]n
[1;35m       x 13[0m: [".alloc"+0]T["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 1[0m: [".alloc"+0]T["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m      x 116[0m: [".alloc"+0]T["CodeObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m      x 187[0m: [".alloc"+0]T["HashMap<Array<byte>, int>.new"+0]
[1;35m       x 29[0m: [".alloc"+0]T["ArrayStack<Vars>.peek"+0]Tn
[1;35m       x 35[0m: [".alloc"+0]T["AST.new"+0]
[1;35m        x 2[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]nT
[1;35m       x 21[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 3[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 23[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(13)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 4[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(13)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]T["Parser.getExprs"+0]["Vector<CodeObject>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]TTTT["Parser.new"+121]Tn["Parser.getExprs"+0]["Vector<CodeObject>.extract"+0]TTTT
[1;35m        x 3[0m: [".alloc"+0]T["Vector<CodeObject>.put"+0]Tn["Arrays.grow<CodeObject>"+0]TnT
[1;35m        x 3[0m: [".alloc"+0]T["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+0]TTn["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+52]T["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m       x 11[0m: [".alloc"+0]T["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+0]TTn["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+52]T["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+0]TTn["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+52]T["TextReader.req1"+0]n["TextReader.advance1"+0]T["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 9[0m: [".alloc"+0]T["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+0]TTn["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+52]T["Vector<Array<byte>>.copy"+0]TT
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.grow<CodeObject>"+59]TTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<CodeObject>"+59]TTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 6[0m: [".alloc"+0]T["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 11[0m: [".alloc"+0]T["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(12)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 16[0m: [".alloc"+0]T["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 4[0m: [".alloc"+0]T["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(9)["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["Strings.parseLiteral"+82]nTTTTn["Chars.parseEscape"+0]TTTTTnT["StringBuilder.putc"+0]["StringBuilder.acquire"+0]nT
[1;35m        x 4[0m: [".alloc"+0]T["Strings.parseLiteral"+82]nTTTTTT["StringBuilder.putc"+0]["StringBuilder.acquire"+0]nT
[1;35m        x 4[0m: [".alloc"+0]T["StrObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, StrObject>.new"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<CodeObject>"+0]TTn["Arrays.copy<CodeObject>"+52]TT["Main.loadCore"+51]nnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<CodeObject>"+0]TTn["Arrays.copy<CodeObject>"+52]TT["Main.main"+610]nnT
[1;35m       x 80[0m: [".alloc"+0]T["CodeObject.compile"+0]TTT
[1;35m      x 116[0m: [".alloc"+0]T["BytecodeCompiler.new"+0]
[1;35m      x 116[0m: [".alloc"+0]T["DataWriter.new"+0]
[1;35m      x 116[0m: [".alloc"+0]T["Vector<Array<byte>>.puta"+0]T["Vector<Array<byte>>.putk"+0]TTTTT["Vector<Array<byte>>.putr"+0]nT
[1;35m       x 75[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 3[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(7)
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]Tn["Arrays.grow<Object>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 8[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+2125]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 6[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.extract"+0]TTTT
[1;35m       x 21[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTTTT["Vector<FileRange>.put"+0]Tn["Arrays.grow<FileRange>"+0]TnT
[1;35m       x 13[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTT["DataWriter.putbbb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]Tn["Arrays.grow<FileRange>"+0]TnT
[1;35m        x 3[0m: [".alloc"+0]T["Ranges.grow<byte>"+47]TTTTT["DataWriter.putbbb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m      x 102[0m: [".alloc"+0]T["Ranges.dup<byte>"+40]T["Vector<Array<byte>>.extract"+0]n
[1;35m       x 14[0m: [".alloc"+0]T["Ranges.dup<byte>"+40]T["Vector<Array<byte>>.extract"+0]TTTT
[1;35m       x 99[0m: [".alloc"+0]T["Vector<Array<byte>>.extract"+0]TTTT
[1;35m       x 17[0m: [".alloc"+0]T["Vector<Array<byte>>.extract"+0]n
[1;35m       x 52[0m: [".alloc"+0]T["Vector<ClassObject -> ClassObject>.extract"+0]n
[1;35m        x 4[0m: [".alloc"+0]T["Vector<ClassObject -> ClassObject>.extract"+0]TTTT
[1;35m       x 81[0m: [".alloc"+0]T["Vector<ASTData.Func>.extract"+0]n
[1;35m       x 29[0m: [".alloc"+0]T["Vector<ASTData.Func>.extract"+0]TTTT
[1;35m       x 86[0m: [".alloc"+0]T["Vector<FileRange>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Vector<FileRange>.extract"+0]TTn
[1;35m      x 115[0m: [".alloc"+0]T["Arrays.copy<FileRange>"+0]TTn["Arrays.copy<FileRange>"+52]T
[1;35m      x 116[0m: [".alloc"+0]T["Bytecode.new"+0]T
[1;35m       x 29[0m: [".alloc"+0]T["BytecodeCompiler.compileAST"+1271]TTTTT["BytecodeCompiler.addFunchole"+0]["Vector<ASTData.Func>.put"+0]nT
[1;35m       x 29[0m: [".alloc"+0]T["Vector<ASTData.Func>.put"+64]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]n["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]nT
[1;35m        x 5[0m: [".alloc"+0]T["Vector<ASTData.Func>.put"+64]TTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 1[0m: [".alloc"+0]T["Vector<ASTData.Func>.put"+64]TTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 29[0m: [".alloc"+0]T["Vector<ASTData.Func>.extract"+100]T["Arrays.copy<ASTData.Func>"+0]TTn["Arrays.copy<ASTData.Func>"+52]T["Vector<FileRange>.extract"+0]TTTT
[1;35m        x 6[0m: [".alloc"+0]T["Vector<ASTData.Func>.extract"+100]T["Arrays.copy<ASTData.Func>"+0]TTn["Arrays.copy<ASTData.Func>"+52]T
[1;35m    x 59635[0m: [".alloc"+0]T["FuncObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m        x 2[0m: [".alloc"+0]T["HashMap<Array<byte>, Object>.balance"+69]n["HashMap<Array<byte>, Object>.balance"+96]n["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 3[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 4[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 3[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(7)
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]T["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]TT["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, StrObject>.has"+99]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<FileRange>"+59]TTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m       x 57[0m: [".alloc"+0]T["Arrays.copy<Object>"+0]TTn["Arrays.copy<Object>"+52]T["Vector<ClassObject -> ClassObject>.extract"+0]n
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.copy<Object>"+0]TTn["Arrays.copy<Object>"+52]T["Vector<ClassObject -> ClassObject>.extract"+0]TTTT
[1;35m   x 216257[0m: [".alloc"+0]T["Arrays.copy<Object>"+0]TTn["Arrays.copy<Object>"+52]TTT["FrameObject.assertArity<Object>"+0]n["FrameObject.isExn"+0]TT["FrameObject.newFrame"+0]["FrameObjects.newFrame"+0]TTTT
[1;35m   x 177277[0m: [".alloc"+0]T["Arrays.copy<Object>"+0]TTn["Arrays.copy<Object>"+52]TTT["FrameObject.assertArity<Object>"+0]n["FrameObject.isExn"+0]TT["FrameObject.newFrame"+0]["FrameObjects.newFrame"+0]TTn
[1;35m       x 16[0m: [".alloc"+0]T["Arrays.copy<Object>"+0]TTn["Arrays.copy<Object>"+52]T["Vector<Object>.puta"+0]T["Vector<Object>.putk"+0]TTTTT["Vector<Object>.putr"+0]nT
[1;35m       x 10[0m: [".alloc"+0]TT
[1;35m    x 35252[0m: [".alloc"+0]T["BigInteger.new"+0]
[1;35m    x 36371[0m: [".alloc"+0]T["IntObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<int>"+59]TTT["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<int>"+59]TTT["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]nTTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]nT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<int>"+59]TTT["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Vector<(AST, AST)>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.grow<int>"+59]TTT["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m        x 2[0m: [".alloc"+0]T["Parser.readExpr"+3041]["TextReader.opt1"+0]Tn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#794+0]["Maybe.Just<ClassKeyword><ClassKeyword>.isNothing"+0]T[#798+0]["Maybe.Just<ClassKeyword><ClassKeyword>.fromJust"+0]TTn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 4[0m: [".alloc"+0]T["Parser.readExpr"+3041]["TextReader.opt1"+0]Tn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#794+0]["Maybe.Just<ClassKeyword><ClassKeyword>.isNothing"+0]T[#798+0]["Maybe.Just<ClassKeyword><ClassKeyword>.fromJust"+0]n[#887+0]["Maybe.Nothing<AST><AST>.isJust"+0]T["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m       x 21[0m: [".alloc"+0]T["Parser.readCode"+0]
[1;35m       x 21[0m: [".alloc"+0]T["CodeObjects.fromAST"+0]T
[1;35m        x 6[0m: [".alloc"+0]T["Vector<(Array<byte>, CodeObject)>.put"+0]nT
[1;35m        x 6[0m: [".alloc"+0]T["Vector<(Array<byte>, CodeObject)>.put"+0]TTTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#794+0]["Maybe.Just<ClassKeyword><ClassKeyword>.isNothing"+0]T[#798+0]["Maybe.Just<ClassKeyword><ClassKeyword>.fromJust"+0]TTn["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 4[0m: [".alloc"+0]T["Vector<(Array<byte>, CodeObject)>.put"+0]TTTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Vector<(Array<byte>, CodeObject)>.put"+0]TTTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Parser.readExpr"+4833]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Parser.readExpr"+4833]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTn
[1;35m        x 9[0m: [".alloc"+0]T["Vector<Array<byte>>.put"+0]nT
[1;35m        x 9[0m: [".alloc"+0]T["Ranges.dup<Array<byte>>"+40]T["CodeObjects.fromAST"+0]T
[1;35m        x 6[0m: [".alloc"+0]T["Vector<ASTData.Func>.put"+0]nT
[1;35m        x 2[0m: [".alloc"+0]T["Vector<ASTData.Func>.put"+0]TTTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readIdentifier"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Vector<ASTData.Func>.put"+0]TTTT["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Parser.bindLocal"+0]["ArrayStack<Vars>.peek"+0]Tn
[1;35m        x 6[0m: [".alloc"+0]T["Arrays.copy<(Array<byte>, CodeObject)>"+0]TTn["Arrays.copy<(Array<byte>, CodeObject)>"+52]T["Vector<ASTData.Func>.extract"+0]TTTT
[1;35m        x 3[0m: [".alloc"+0]T["Bucket<Array<byte>, Box<AccessMode>>.new"+0]
[1;35m        x 3[0m: [".alloc"+0]T["Parser.readExpr"+654]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, StrObject>.new"+0]["HashMap<Array<byte>, StrObject>.insert"+0]T["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, StrObject>.new"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Bucket<Array<byte>, StrObject>.new"+0]T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]Tn["Arrays.grow<Object>"+0]TnT
[1;35m        x 3[0m: [".alloc"+0]T["Arrays.copy<(AST, AST)>"+0]TTn["Arrays.copy<(AST, AST)>"+52]T
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.grow<(Array<byte>, Box<AccessMode>)>"+59]TTTT["Parser.readCode"+403]n["Vector<(Array<byte>, Box<AccessMode>)>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<AST>"+59]TTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]Tn["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1014+0]["Parser.isFullQualCharacter"+0]TnTTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<AST>"+59]TTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT["TextReader.readToken"+0]["TextReader.tokenFor"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<AST>"+59]TTTT["Parser.readExpr"+4620]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]nT["Vector<AST>.extract"+0]TTTT
[1;35m        x 4[0m: [".alloc"+0]T["Arrays.grow<byte>"+59]TTT["Strings.parseLiteral"+82]nTTTTTT["StringBuilder.putc"+0]["StringBuilder.acquire"+0]TTn["Arrays.grow<byte>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<byte>"+59]TTT["Strings.parseLiteral"+82]nTTTn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTT["Arrays.range<byte>"+0]T
[1;35m    x 30354[0m: [".alloc"+0]T["Arrays.grow<byte>"+59]TTTT["BigInteger.displayHex"+83]T["StringBuilder.extract"+0]TTT["Arrays.range<byte>"+0]T
[1;35m       x 60[0m: [".alloc"+0]T["Arrays.grow<byte>"+59]T["StringBuilder.putUpToArg"+35]Tn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTT["Arrays.range<byte>"+0]T
[1;35m      x 100[0m: [".alloc"+0]T["Arrays.grow<byte>"+59]T["StringBuilder.puts"+27]T["StringBuilder.finishFmt"+0]["StringBuilder.putUpToArg"+0]T["StringBuilder.acquire"+0]TTT["StringBuilder.putUpToArg"+35]Tn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTT["Arrays.range<byte>"+0]T
[1;35m    x 33162[0m: [".alloc"+0]T["Arrays.grow<byte>"+59]T["Ints.renderPosDecimal"+0]nTT["StringBuilder.finishFmt"+0]["StringBuilder.putUpToArg"+0]T["StringBuilder.acquire"+0]TTT["StringBuilder.putUpToArg"+35]Tn["StringBuilder.toString"+0]["StringBuilder.extract"+0]TTT["Arrays.range<byte>"+0]T
[1;35m       x 17[0m: [".alloc"+0]T["Vector<Object>.extract"+0]TTTT
[1;35m       x 11[0m: [".alloc"+0]T["BytecodeCompiler.compileAST"+1946]nT
[1;35m        x 6[0m: [".alloc"+0]T["BytecodeCompiler.compileAST"+1946]T["Arrays.map<ASTData.Func, FuncObject>"+0]T
[1;35m        x 5[0m: [".alloc"+0]T["Arrays.map<ASTData.Func, FuncObject>"+44]n[#851+0]["BytecodeCompiler.funcToFunc"+0]TTT["Arrays.prepend<Array<byte>>"+0]TTnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.map<ASTData.Func, FuncObject>"+44]n[#851+0]["BytecodeCompiler.funcToFunc"+0]TTT["Arrays.prepend<Array<byte>>"+0]TTT
[1;35m       x 12[0m: [".alloc"+0]T["Arrays.grow<Array<byte>>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TT["cicero$global.m23386"+0]T["DataWriter.growI2X"+0]Tn["Ranges.grow<byte>"+0]nT
[1;35m        x 5[0m: [".alloc"+0]T["Arrays.grow<Array<byte>>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]Tn["Arrays.grow<FileRange>"+0]TnT
[1;35m        x 4[0m: [".alloc"+0]T["Arrays.grow<Array<byte>>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<Array<byte>>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(7)
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<Array<byte>>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]Tn["Arrays.grow<Array<byte>>"+0]TnT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<Array<byte>>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]nT
[1;35m        x 9[0m: [".alloc"+0]T["FuncObjects.newFO"+0]
[1;35m        x 6[0m: [".alloc"+0]T["BytecodeCompiler.addClasshole"+0]["Vector<ClassObject -> ClassObject>.put"+0]nT
[1;35m        x 6[0m: [".alloc"+0]T["Arrays.copy<ClassObject -> ClassObject>"+0]TTn["Arrays.copy<ClassObject -> ClassObject>"+52]T["Vector<ASTData.Func>.extract"+0]n
[1;35m    x 95999[0m: [".alloc"+0]T["Object.initClass"+310]n["Vector<ClassObject>.put"+0]nT
[1;35m    x 95999[0m: [".alloc"+0]T["Arrays.copy<ClassObject>"+0]TTn["Arrays.copy<ClassObject>"+52]TT["Object.initClass"+374]nTT["Object.initClass"+433]TTT["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]nnT["HashMap<Array<byte>, int>.[]="+0]nn
[1;35m       x 28[0m: [".alloc"+0]T["Arrays.copy<ClassObject>"+0]TTn["Arrays.copy<ClassObject>"+52]TT["BytecodeFrame.evalBytecode"+2980]nTT["BytecodeFrame.evalBytecode"+3038]nTT["Strings.format2<Array<byte>, Array<byte>>"+0]
[1;35m    x 95999[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnn
[1;35m    x 95999[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]["HashMap<Array<byte>, int>.insert"+0]T["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m   x 456601[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m   x 373682[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m   x 145372[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m    x 72691[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m    x 95999[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]T["Object.initClass"+374]TT
[1;35m       x 28[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]T["Object.initClass"+374]nTT["Object.initClass"+433]nT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]T["Object.initClass"+374]nTT["Object.initClass"+433]nT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m        x 6[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+573]T["Object.initClass"+374]nTT["Object.initClass"+433]nT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m       x 76[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+433]nT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m       x 44[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+433]nT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m       x 24[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+433]TTT["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m       x 16[0m: [".alloc"+0]T["Bucket<Array<byte>, int>.new"+0]T["Object.initClass"+433]TTT["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]TTT
[1;35m        x 2[0m: [".alloc"+0]T["Object.instanceOf"+27]Tnn["FrameObject.isExn"+0]TTTTT["cicero$closure5<(Array<byte>, ClassObject, CodeObject, Array<(Array<byte>, CodeObject)>, Array<FuncObject>) -> ClassObject, Array<byte>, CodeObject, Array<(Array<byte>, CodeObject)>, Array<FuncObject>>.m23738"+0]["cicero$global.m23387"+0]
[1;35m        x 5[0m: [".alloc"+0]T["Object.instanceOf"+27]Tnn["FrameObject.isExn"+0]TTT["Objects.newObject"+0]
[1;35m    x 46518[0m: [".alloc"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m        x 2[0m: [".alloc"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 2[0m: [".alloc"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m        x 2[0m: [".alloc"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]TTT["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]TTT["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m     x 1410[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTTT[#846+0]["cicero$global.m23368"+0]T["ListObject.l_set"+0]TT["BigInteger.longValue"+0]["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]T
[1;35m      x 468[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTTT[#846+0]["cicero$global.m23368"+0]T["ListObject.l_set"+0]TT["BigInteger.longValue"+0]["BigInteger.trace"+0]["Strings.format1<long>"+0]
[1;35m        x 2[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#833+0]["cicero$global.m23362"+0]T["IntObject.i_ora"+0]TT["BigInteger.or"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTTT["Ints.max"+0]TT
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#833+0]["cicero$global.m23362"+0]T["IntObject.i_ora"+0]TT["BigInteger.or"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTnT["Ints.max"+0]TT
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#811+0]["cicero$global.m23351"+0]T["IntObject.i_add"+0]TT["BigInteger.add"+0]TTn
[1;35m     x 1800[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#811+0]["cicero$global.m23351"+0]T["IntObject.i_add"+0]TT["BigInteger.add"+0]TTTn["BigInteger.addMag"+0]TTTTT
[1;35m       x 72[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#811+0]["cicero$global.m23351"+0]T["IntObject.i_add"+0]TT["BigInteger.add"+0]Tn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTn["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTTn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#813+0]["cicero$global.m23352"+0]T["IntObject.i_sub"+0]TT["BigInteger.subtract"+0]TTTn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]Tn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#813+0]["cicero$global.m23352"+0]T["IntObject.i_sub"+0]TT["BigInteger.subtract"+0]TTTn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTTTn["BigInteger.subtractMag"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#831+0]["cicero$global.m23361"+0]T["IntObject.i_and"+0]TT["BigInteger.and"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTTT["Ints.max"+0]TT
[1;35m     x 1998[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#831+0]["cicero$global.m23361"+0]T["IntObject.i_and"+0]TT["BigInteger.and"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTnn["Ints.popcnt"+0]["Ints.popcnt"+11]n["BigInteger.bitLength"+90]TT["Ints.max"+0]TT
[1;35m        x 2[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#837+0]["cicero$global.m23364"+0]T["IntObject.i_shr"+0]TTT["BigInteger.longValue"+0]["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTTTT[#835+0]["cicero$global.m23363"+0]T["IntObject.i_eor"+0]TT["BigInteger.xor"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTnnnT["Ints.max"+0]TT
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]nTTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]T["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m        x 1[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m    x 13101[0m: [".alloc"+0]T["Object.instanceOf"+27]TnnTT
[1;35m        x 6[0m: [".alloc"+0]T["ClassObject.new"+0]["Strings.hash"+0]T["Strings.hash"+23]T["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m       x 17[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+3588]n["ArrayStack<Object>.pop"+0]nTT["Vector<Object>.put"+0]nT
[1;35m       x 17[0m: [".alloc"+0]T["ListObject.new"+0]
[1;35m       x 45[0m: [".alloc"+0]T["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<Object>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.extract"+0]TTTT
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.grow<Object>"+59]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<int>"+0]TTn["Arrays.copy<int>"+52]TT["BytecodeCompiler.compileAST"+928]T["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<int>"+0]TTn["Arrays.copy<int>"+52]TT["BytecodeCompiler.compileAST"+928]T["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.copy<int>"+0]TTn["Arrays.copy<int>"+52]TT["BytecodeCompiler.compileAST"+928]T["BytecodeCompiler.extract"+0]["DataWriter.extract"+0]["DataWriter.end"+0]nTTT["Ranges.dup<byte>"+0]T
[1;35m        x 7[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+1508]T["Vector<Object>.reverse"+0]n["ArrayStack<Object>.pop"+0]nTTTTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]nTT
[1;35m    x 20612[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+1508]T["Vector<Object>.reverse"+0]n["ArrayStack<Object>.pop"+0]nTTTTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnT
[1;35m   x 393534[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+1508]n["ArrayStack<Object>.pop"+0]nTT["Vector<Object>.put"+0]nT
[1;35m        x 7[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+2002]TT["Vector<Object>.extract"+0]n
[1;35m   x 192453[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+2002]TT["Vector<Object>.extract"+0]TTTT
[1;35m   x 222928[0m: [".alloc"+0]T["BytecodeFrame.new"+229]TTTT
[1;35m        x 7[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTn
[1;35m    x 22547[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m        x 1[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTTn
[1;35m     x 5696[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 5[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(18)["ArrayStack<Object>.pop"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]n["Object.initClass"+0]TTn
[1;35m       x 16[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(20)
[1;35m   x 194501[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m       x 23[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTT["Objects.newObject"+0]
[1;35m       x 40[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TT["FrameObject.getValue"+0]T["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, int>.[]"+122]nTTTT["BytecodeFrame.evalBytecode"+3038]nTT["Strings.format2<Array<byte>, Array<byte>>"+0]
[1;35m       x 86[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TT["FrameObject.getValue"+0]T["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]"+122]nTTTT["BytecodeFrame.evalBytecode"+3038]nTT["Strings.format2<Array<byte>, Array<byte>>"+0]
[1;35m        x 6[0m: [".alloc"+0]T["BytecodeFrame.new"+397]TTT["BytecodeFrame.eval"+0]TTTT["BytecodeFrame.evalBytecode"+0]T["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TT["FrameObject.getValue"+0]T["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, int>.[]"+122]nTTTT["BytecodeFrame.evalBytecode"+3038]nTT["Strings.format2<Array<byte>, Array<byte>>"+0]
[1;35m    x 59597[0m: [".alloc"+0]T["MethodObject.new"+0]
[1;35m   x 201081[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+1706]TTTTTT["Vector<Object>.extract"+0]TTTT
[1;35m    x 20612[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+1706]TTTTTT["Vector<Object>.extract"+0]n
[1;35m   x 191385[0m: [".alloc"+0]T["VirgilFrame.new"+0]["FrameObject.new"+0]["Object.new"+0]["Strings.newMap<int>"+0]
[1;35m     x 3886[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m     x 7604[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#833+0]["cicero$global.m23362"+0]T["IntObject.i_ora"+0]TT["BigInteger.or"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTTT["Ints.max"+0]TT
[1;35m     x 1855[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#833+0]["cicero$global.m23362"+0]T["IntObject.i_ora"+0]TT["BigInteger.or"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTnT["Ints.max"+0]TT
[1;35m      x 942[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#811+0]["cicero$global.m23351"+0]T["IntObject.i_add"+0]TT["BigInteger.add"+0]TTn
[1;35m    x 11165[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#811+0]["cicero$global.m23351"+0]T["IntObject.i_add"+0]TT["BigInteger.add"+0]TTTn["BigInteger.addMag"+0]TTTTT
[1;35m     x 1335[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTn["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 2[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]T["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m      x 466[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]TTT["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 3797[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#813+0]["cicero$global.m23352"+0]T["IntObject.i_sub"+0]TT["BigInteger.subtract"+0]TTTn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTTTn["BigInteger.subtractMag"+0]T
[1;35m       x 73[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#813+0]["cicero$global.m23352"+0]T["IntObject.i_sub"+0]TT["BigInteger.subtract"+0]TTTn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]Tn
[1;35m        x 3[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTn["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTTn
[1;35m     x 1998[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#835+0]["cicero$global.m23363"+0]T["IntObject.i_eor"+0]TT["BigInteger.xor"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTnT["Ints.max"+0]TT
[1;35m      x 993[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#835+0]["cicero$global.m23363"+0]T["IntObject.i_eor"+0]TT["BigInteger.xor"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTnnnT["Ints.max"+0]TT
[1;35m     x 1997[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#831+0]["cicero$global.m23361"+0]T["IntObject.i_and"+0]TT["BigInteger.and"+0]["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTTT["Ints.max"+0]TT
[1;35m     x 1996[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#837+0]["cicero$global.m23364"+0]T["IntObject.i_shr"+0]TTT["BigInteger.longValue"+0]["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]T
[1;35m    x 11410[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, IntObject) -> Result>.m23824<IntObject, IntObject>"+0]T["Function.callMethod1<IntObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m     x 1878[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (ListObject, IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (ListObject, IntObject, Object) -> Result>.m23816<Object, IntObject, ListObject>"+0]["Function.callMethod2<ListObject, IntObject, Object>"+0]TTTT["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m        x 6[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (ListObject, IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (ListObject, IntObject, Object) -> Result>.m23816<Object, IntObject, ListObject>"+0]["Function.callMethod2<ListObject, IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTTT[#846+0]["cicero$global.m23368"+0]T["ListObject.l_set"+0]TT["BigInteger.longValue"+0]["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]T
[1;35m        x 1[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTTTTTn
[1;35m    x 29663[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m       x 14[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 4643[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m     x 6684[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m     x 2875[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 90[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m    x 20524[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (Object, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (Object, Object) -> Result>.m23850<Object, Object>"+0]["Function.callMethod1<Object, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m       x 10[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m    x 62958[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(9)
[1;35m     x 1996[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]n["Object.initClass"+0]TTTTTTTn
[1;35m      x 992[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 11[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]nTTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 1005[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]T["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 8[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (IntObject, Object) -> Result) -> Result, Array<byte>, Array<ClassObject>, (IntObject, Object) -> Result>.m23825<Object, IntObject>"+0]["Function.callMethod1<IntObject, Object>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]n["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m     x 8036[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (ListObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (ListObject, IntObject) -> Result>.m23815<IntObject, ListObject>"+0]["Function.callMethod1<ListObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#844+0]["cicero$global.m23367"+0]T["ListObject.l_get"+0]TT["BigInteger.longValue"+0]["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]T
[1;35m      x 468[0m: [".alloc"+0]T["Arrays.map<(Array<byte>, Object), Object>"+44]TTTTTTTT["cicero$closure4<(Array<byte>, Range<Object>, Array<ClassObject>, (ListObject, IntObject) -> Result) -> Result, Array<byte>, Array<ClassObject>, (ListObject, IntObject) -> Result>.m23815<IntObject, ListObject>"+0]["Function.callMethod1<ListObject, IntObject>"+0]TTTT["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#844+0]["cicero$global.m23367"+0]T["ListObject.l_get"+0]TT["BigInteger.longValue"+0]["BigInteger.trace"+0]["Strings.format1<long>"+0]
[1;35m       x 28[0m: [".alloc"+0]T["BytecodeFrame.evalBytecode"+2905]n["Vector<ClassObject>.put"+0]nT
[1;35m      x 160[0m: [".alloc"+0]T["StringBuilder.put2<Array<byte>, Array<byte>>"+0]["StringBuilder.putArg<Array<byte>>"+0]["StringBuilder.putUpToArg"+0]T["StringBuilder.acquire"+0]nT
[1;35m      x 160[0m: [".alloc"+0]T["StringBuilder.putUpToArg"+35]nTTnnTTTTTTn["StringBuilder.puts"+0]T["StringBuilder.acquire"+0]TTn["Arrays.grow<byte>"+0]TnT
[1;35m    x 33162[0m: [".alloc"+0]T["StringBuilder.putUpToArg"+35]nTTnnTTTn["StringBuilder.putd<long>"+0]nT["StringBuilder.putd_u32"+0]["StringBuilder.acquire"+0]TTn["Arrays.grow<byte>"+0]TnT
[1;35m      x 160[0m: [".alloc"+0]T["FrameObject.newFrame"+0]["FrameObjects.newFrame"+0]TTTT
[1;35m    x 30354[0m: [".alloc"+0]T["StringBuilder.puts"+27]TT["BigInteger.displayHex"+83]n["StringBuilder.putx<int>"+0]nT["StringBuilder.putx_8"+0]["StringBuilder.acquire"+0]TTn["Arrays.grow<byte>"+0]TnT
[1;35m    x 33162[0m: [".alloc"+0]T["StringBuilder.put1<long>"+0]["StringBuilder.putArg<long>"+0]["StringBuilder.putUpToArg"+0]T["StringBuilder.acquire"+0]nT
[1;35m     x 9462[0m: [".alloc"+0]T["BigInteger.or"+60]T["BigInteger.valueOf"+0]TTn
[1;35m    x 14108[0m: [".alloc"+0]T["ASTFrame.new"+0]["Strings.newMap<Object>"+0]
[1;35m    x 14108[0m: [".alloc"+0]T["ASTFrame.evalAST"+917]TTTTTTTTT["FrameObject.assertArity<AST>"+0]n["FrameObject.isExn"+0]TT["FrameObject.newFrame"+0]["FrameObjects.newFrame"+0]TTn
[1;35m     x 2924[0m: [".alloc"+0]T["BigInteger.and"+60]T["BigInteger.valueOf"+0]TTn
[1;35m     x 1072[0m: [".alloc"+0]T["BigInteger.and"+60]T["BigInteger.valueOf"+0]TTTT["BigInteger.stripLeadingZeros"+0]["BigInteger.stripLeadingZeros"+9]TTTTTTTTT["Ranges.dup<int>"+0]T
[1;35m        x 2[0m: [".alloc"+0]T["BigInteger.shiftRightImplWorker"+0]n["BigInteger.shiftRightImplWorker"+38]TT
[1;35m      x 994[0m: [".alloc"+0]T["BigInteger.xor"+60]T["BigInteger.valueOf"+0]TTn
[1;35m     x 1998[0m: [".alloc"+0]T["BigInteger.xor"+60]T["BigInteger.valueOf"+0]TTTn["BigInteger.makePositive"+0]["BigInteger.makePositive"+9]TnTT["BigInteger.makePositive"+84]TnTTTTTT
[1;35m     x 1998[0m: [".alloc"+0]T["BigInteger.makePositive"+237]TT["BigInteger.makePositive"+345]TT
[1;35m     x 1072[0m: [".alloc"+0]T["Ranges.dup<int>"+40]TTn
[1;35m   x 224962[0m: [".alloc"+0]T
[1;35m        x 1[0m: ["HashMap<Array<byte>, Opt>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTT["Option<bool>.get"+0]T
[1;35m        x 1[0m: ["HashMap<Array<byte>, Opt>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTT["Option<int>.get"+0]Tn
[1;35m    x 62160[0m: ["StringBuilder.puts"+27]nTT
[1;35m      x 100[0m: ["StringBuilder.puts"+27]T["StringBuilder.putArg<Array<byte>>"+0]["StringBuilder.putUpToArg"+0]T["StringBuilder.acquire"+0]TTT
[1;35m        x 2[0m: ["Options.isOptionPrefix"+27]nTTn
[1;35m        x 1[0m: ["Arrays.range<Array<byte>>"+45]nTTT
[1;35m       x 19[0m: ["Options.parseOption"+7]TnTT
[1;35m   x 396056[0m: ["BytecodeFrame.new"+229]TnTT
[1;35m     x 1928[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTn
[1;35m      x 465[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTTTTn
[1;35m        x 1[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T
[1;35m        x 1[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T
[1;35m        x 1[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T
[1;35m      x 412[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTTTnT["Vector<int>.put"+0]TTTT
[1;35m       x 67[0m: ["Parser.skipWhitespaceAndComments"+51]nTTTTnT["TextReader.nextTabStop"+0]
[1;35m       x 30[0m: ["Parser.skipWhitespaceAndComments"+51]nTTn
[1;35m       x 31[0m: ["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn[#765+0]["Maybe.Nothing<Keyword><Keyword>.isNothing"+0]n
[1;35m        x 9[0m: ["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTT["Parser.readKeyword"+156]TTT["Parser.readKeyword"+75]T[#765+0]["Maybe.Nothing<Keyword><Keyword>.isNothing"+0]n
[1;35m       x 13[0m: ["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTT["Parser.readKeyword"+75]T[#765+0]["Maybe.Nothing<Keyword><Keyword>.isNothing"+0]n
[1;35m       x 14[0m: ["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(0)
[1;35m        x 1[0m: ["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(15)
[1;35m       x 60[0m: ["StringBuilder.acquire"+0]TTT["StringBuilder.puts"+27]T["StringBuilder.putArg<Array<byte>>"+0]["StringBuilder.putUpToArg"+0]T
[1;35m       x 60[0m: ["StringBuilder.acquire"+0]TTT["StringBuilder.puts"+27]T["StringBuilder.finishFmt"+0]["StringBuilder.putUpToArg"+0]T
[1;35m      x 100[0m: ["StringBuilder.acquire"+0]TTT["StringBuilder.putUpToArg"+35]nTTnnTTTTTTn["StringBuilder.puts"+0]T
[1;35m   x 158872[0m: ["Arrays.range<byte>"+45]nTTT
[1;35m        x 1[0m: ["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 1[0m: ["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T
[1;35m        x 3[0m: ["Strings.equal"+0]TTTn["Strings.equal"+44]TTTn["HashMap<Array<byte>, StrObject>.[]"+0]TT
[1;35m    x 59597[0m: ["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTn["Object.getField"+104]TT["Object.getField"+158]nT
[1;35m   x 202849[0m: ["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTT["Object.getField"+158]nT
[1;35m        x 1[0m: ["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, StrObject>.has"+99]Tn
[1;35m        x 1[0m: ["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, StrObject>.dohash"+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, StrObject>.[]"+107]nn
[1;35m   x 244277[0m: ["Strings.equal"+0]TTTTT["Object.getField"+158]nT
[1;35m  x 8251614[0m: ["Strings.equal"+44]TnTTn
[1;35m    x 90913[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(1)TT["ArrayStack<Object>.push"+0]TTTT
[1;35m    x 44985[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(22)TT["ArrayStack<Object>.push"+0]TTTT
[1;35m   x 213299[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(2)TTT["HashMap<Array<byte>, Object>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT["ArrayStack<Object>.push"+0]TTTT
[1;35m    x 34987[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(7)["ArrayStack<Object>.pop"+0]nTTTT
[1;35m    x 49391[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(21)["BytecodeFrame.evalBytecode"+3685]T
[1;35m   x 540145[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(3)TTT["ArrayStack<Object>.push"+0]TTTT
[1;35m        x 6[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTnT
[1;35m       x 12[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT
[1;35m    x 10036[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(23)["ArrayStack<Object>.peek"+0]nTTTTTT
[1;35m    x 10036[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(8)["ArrayStack<Object>.pop"+0]nTTTTT["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTn
[1;35m   x 230862[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn
[1;35m    x 34324[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(11)["ArrayStack<Object>.pop"+0]nTTT["BoolObject.isTrue"+0]T
[1;35m    x 16660[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(11)["ArrayStack<Object>.pop"+0]nTTT["BoolObject.isTrue"+0]n
[1;35m    x 14002[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(10)
[1;35m   x 260004[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTTT["ArrayStack<Object>.push"+0]TTTT
[1;35m    x 21414[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(13)["ArrayStack<Object>.peek"+0]nTTT["BoolObject.isTrue"+0]n["ArrayStack<Object>.pop"+0]nTT
[1;35m     x 2024[0m: ["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(13)["ArrayStack<Object>.peek"+0]nTTT["BoolObject.isTrue"+0]T
[1;35m    x 78094[0m: ["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]T["FrameObject.getValue"+0]T["ArrayStack<Object>.push"+0]TTTT
[1;35m        x 2[0m: ["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TT["FrameObject.getValue"+0]T["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]"+122]nTTTT["BytecodeFrame.evalBytecode"+3038]TTn["BytecodeFrame.evalBytecode"+2980]T["ArrayStack<Object>.push"+0]TTTT
[1;35m       x 10[0m: ["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TT["FrameObject.getValue"+0]T["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]"+122]nTTTT["BytecodeFrame.evalBytecode"+3038]TTn["BytecodeFrame.evalBytecode"+2980]T["ArrayStack<Object>.push"+0]TTTT
[1;35m   x 151375[0m: ["BytecodeFrame.evalBytecode"+1508]n["ArrayStack<Object>.pop"+0]nTT["Vector<Object>.put"+0]TTTT
[1;35m   x 202965[0m: ["BytecodeFrame.evalBytecode"+1706]n["Vector<Object>.[]"+0]TTTnTT
[1;35m   x 341944[0m: ["BytecodeFrame.evalBytecode"+2002]n["Vector<Object>.[]"+0]TTTnTT
[1;35m       x 40[0m: ["BytecodeFrame.evalBytecode"+2905]n["Vector<ClassObject>.put"+0]TTTTT
[1;35m       x 28[0m: ["BytecodeFrame.evalBytecode"+2980]nTT["BytecodeFrame.evalBytecode"+3038]TTn
[1;35m       x 12[0m: ["BytecodeFrame.evalBytecode"+3038]TTn["BytecodeFrame.evalBytecode"+2980]nTT
[1;35m       x 57[0m: ["BytecodeFrame.evalBytecode"+3588]n["ArrayStack<Object>.pop"+0]nTT["Vector<Object>.put"+0]TTTT
[1;35m   x 164338[0m: ["BytecodeFrame.evalBytecode"+3685]n["ArrayStack<Object>.pop"+0]nTT
[1;35m   x 222989[0m: ["FrameObject.isExn"+0]n["ArrayStack<Object>.empty"+0]T["ArrayStack<Object>.peek"+0]nTT
[1;35m        x 4[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(19)["ArrayStack<Object>.pop"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn
[1;35m     x 1876[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(13)["ArrayStack<Object>.peek"+0]nTTT["BoolObject.isTrue"+0]n["ArrayStack<Object>.pop"+0]nTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m      x 469[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(13)["ArrayStack<Object>.peek"+0]nTTT["BoolObject.isTrue"+0]T["BytecodeFrame.evalBytecode"+65]Tn
[1;35m   x 128006[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(2)TTT["HashMap<Array<byte>, Object>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m   x 114947[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(21)["BytecodeFrame.evalBytecode"+3685]T["BytecodeFrame.evalBytecode"+65]Tn
[1;35m     x 4660[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(3)TTT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]TT
[1;35m   x 162774[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(3)TTT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m       x 23[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(18)["ArrayStack<Object>.pop"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn
[1;35m    x 33146[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 48844[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(1)TT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m        x 1[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(1)TT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]TT
[1;35m    x 95778[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(22)TT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 39038[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(7)["ArrayStack<Object>.pop"+0]nTTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 80846[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(11)["ArrayStack<Object>.pop"+0]nTTT["BoolObject.isTrue"+0]T["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 41152[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(11)["ArrayStack<Object>.pop"+0]nTTT["BoolObject.isTrue"+0]n["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 88035[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTTT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m     x 1856[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(4)["ArrayStack<Object>.pop"+0]nTTTTTT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTTT["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]TT
[1;35m    x 51614[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(10)["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 15484[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(10)["BytecodeFrame.evalBytecode"+65]TT
[1;35m    x 50240[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(23)["ArrayStack<Object>.peek"+0]nTTTTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 50240[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(8)["ArrayStack<Object>.pop"+0]nTTTTT["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTTTTn["BytecodeFrame.evalBytecode"+65]Tn
[1;35m     x 6500[0m: ["FrameObject.isExn"+0]TTTTTTTTnT,br_table(6)TT["ArrayStack<Object>.pop"+0]nTTT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m   x 122658[0m: ["FrameObject.isExn"+0]T["FrameObject.getValue"+0]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]TT
[1;35m   x 213385[0m: ["FrameObject.isExn"+0]T["FrameObject.getValue"+0]T["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn
[1;35m    x 14108[0m: ["FrameObject.isExn"+0]T["FrameObject.getValue"+0]T
[1;35m     x 1007[0m: ["FrameObject.isExn"+0]T["FrameObject.assertType"+0]T["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn
[1;35m   x 237036[0m: ["FrameObject.isExn"+0]T
[1;35m    x 14108[0m: ["ASTFrame.evalAST"+0]TT,br_table(5)
[1;35m    x 14108[0m: ["ASTFrame.evalAST"+0]TT,br_table(13)
[1;35m    x 14108[0m: ["ASTFrame.evalAST"+917]Tn["ASTFrame.evalAST"+0]TT,br_table(0)T["FrameObject.isExn"+0]TTnTT
[1;35m        x 1[0m: ["HashMap<Array<byte>, Object>.balance"+69]n["HashMap<Array<byte>, Object>.balance"+96]T
[1;35m       x 77[0m: ["HashMap<Array<byte>, Object>.balance"+96]T["HashMap<Array<byte>, Object>.balance"+69]n
[1;35m        x 1[0m: ["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["FrameObjects.newTopFrame"+74]nnT["HashMap<Array<byte>, Object>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT
[1;35m        x 1[0m: ["TextReader.at"+0]n["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 1[0m: ["TextReader.at"+0]n["Parser.new"+121]n[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 1[0m: ["TextReader.at"+0]n["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m      x 116[0m: ["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]
[1;35m        x 5[0m: ["TextReader.at"+0]n["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m       x 20[0m: ["TextReader.at"+0]nT["Parser.contains"+0]["Parser.contains"+7]TTT["Vector<Array<byte>>.put"+0]TTTTT["Parser.readExpr"+1504]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 7[0m: ["TextReader.at"+0]nT["Parser.contains"+0]["Parser.contains"+7]TTT["Vector<Array<byte>>.put"+0]TTTTT["Parser.readExpr"+3505]["TextReader.opt1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m       x 30[0m: ["TextReader.at"+0]n["Parser.readClassKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readClassKeyword"+152]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]
[1;35m      x 857[0m: ["TextReader.at"+0]TnTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 1[0m: ["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(6)["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 8[0m: ["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(0)["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 4[0m: ["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(2)["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 1[0m: ["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(3)["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m       x 29[0m: ["TextReader.at"+0]TnTTT["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m        x 1[0m: ["TextReader.at"+0]TnTTT["Parser.readExpr"+0]TTTTn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT
[1;35m       x 24[0m: ["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Parser.readExpr"+3041]["TextReader.opt1"+0]Tn
[1;35m        x 9[0m: ["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#794+0]["Maybe.Just<ClassKeyword><ClassKeyword>.isNothing"+0]T[#798+0]["Maybe.Just<ClassKeyword><ClassKeyword>.fromJust"+0]TTT
[1;35m        x 9[0m: ["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Vector<(AST, AST)>.put"+0]TTTTT["Parser.readExpr"+654]["TextReader.opt1"+0]Tn
[1;35m       x 12[0m: ["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readExpr"+0]n
[1;35m      x 152[0m: ["TextReader.opt1"+0]Tn["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n
[1;35m        x 6[0m: ["TextReader.opt1"+0]Tn["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n
[1;35m       x 13[0m: ["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]n
[1;35m     x 2701[0m: ["Parser.readKeyword"+75]nnTT
[1;35m      x 214[0m: ["Parser.readKeyword"+156]TTT["Parser.readKeyword"+75]nnTn
[1;35m       x 23[0m: ["Parser.contains"+7]Tn["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTT
[1;35m       x 19[0m: ["Parser.contains"+7]Tn["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT
[1;35m       x 34[0m: ["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TnTTTT
[1;35m       x 79[0m: ["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TnT["Vector<(Array<byte>, Box<AccessMode>)>.put"+0]TTTTT
[1;35m       x 21[0m: ["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTTT
[1;35m        x 1[0m: ["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTTT
[1;35m       x 40[0m: ["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTTT
[1;35m       x 13[0m: ["Parser.readCode"+403]TT["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTTT
[1;35m      x 102[0m: ["Vector<Array<byte>>.extract"+0]TTn
[1;35m       x 61[0m: ["Parser.readClassKeyword"+75]nnTT
[1;35m       x 38[0m: ["Vector<ASTData.Func>.extract"+100]n
[1;35m       x 75[0m: ["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTn
[1;35m       x 20[0m: ["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTn
[1;35m        x 9[0m: ["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTn
[1;35m        x 1[0m: ["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nTTTn
[1;35m        x 7[0m: ["Ranges.dup<Array<byte>>"+40]nTT
[1;35m      x 350[0m: ["Vector<ASTData.Func>.put"+64]n
[1;35m       x 50[0m: ["Arrays.grow<CodeObject>"+59]nT
[1;35m       x 61[0m: ["Arrays.copy<CodeObject>"+52]nTTTT
[1;35m   x 127889[0m: ["Arrays.grow<byte>"+59]nT
[1;35m      x 160[0m: ["StringBuilder.putUpToArg"+35]nTTTTT
[1;35m       x 60[0m: ["StringBuilder.putUpToArg"+35]nTTnnTTTTTTn["StringBuilder.puts"+0]T["StringBuilder.acquire"+0]TTT
[1;35m      x 118[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(2)
[1;35m      x 127[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(5)
[1;35m      x 115[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(13)
[1;35m       x 24[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(6)
[1;35m       x 37[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(12)["BytecodeCompiler.compileAST"+1518]Tn
[1;35m        x 3[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(12)["BytecodeCompiler.compileAST"+1518]TTT
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(17)T["BytecodeCompiler.compileAST"+2125]n
[1;35m       x 59[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(14)
[1;35m        x 4[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(11)
[1;35m        x 6[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(16)
[1;35m       x 26[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT
[1;35m        x 3[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn
[1;35m        x 3[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn
[1;35m        x 5[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 6[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n
[1;35m        x 3[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT
[1;35m        x 6[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n
[1;35m        x 4[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(15)TTTTT
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(8)
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+0]TT,br_table(3)
[1;35m        x 8[0m: ["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 5[0m: ["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 4[0m: ["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 4[0m: ["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m       x 10[0m: ["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m       x 15[0m: ["BytecodeCompiler.compileAST"+928]n["BytecodeCompiler.fillHole"+0]TTT
[1;35m        x 6[0m: ["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 6[0m: ["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 1[0m: ["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(12)
[1;35m        x 2[0m: ["BytecodeCompiler.compileAST"+2125]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m      x 129[0m: ["Arrays.grow<Array<byte>>"+59]nT
[1;35m      x 116[0m: ["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(22)TT
[1;35m      x 126[0m: ["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(3)TTT
[1;35m       x 38[0m: ["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(2)TTT["HashMap<Array<byte>, Object>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT
[1;35m        x 6[0m: ["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(1)TT
[1;35m       x 16[0m: ["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]TT["FrameObject.getValue"+0]T["Object.setField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]"+122]nTTTT["BytecodeFrame.evalBytecode"+3038]TTn["BytecodeFrame.evalBytecode"+2980]T
[1;35m       x 16[0m: ["ArrayStack<Object>.push"+0]TTTT["BytecodeFrame.evalBytecode"+65]TT["FrameObject.isExn"+0]T["FrameObject.getValue"+0]T
[1;35m    x 60276[0m: ["ArrayStack<Object>.pop"+0]nTT
[1;35m       x 69[0m: ["Object.getField"+158]TT["Object.getField"+104]TT
[1;35m    x 66970[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT[#821+0]["cicero$global.m23356"+0]T["IntObject.i_eq"+0]T
[1;35m     x 5504[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]n["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m    x 24229[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]nTTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m    x 16534[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]T["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m    x 19679[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m     x 5806[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTn["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m     x 1177[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTT["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m     x 1032[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]T["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m      x 861[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]TTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m     x 1997[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]TTn["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m      x 466[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]T["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m       x 70[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTn["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m        x 1[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTTTTT[#823+0]["cicero$global.m23357"+0]T["IntObject.i_lt"+0]TT["BigInteger.compareTo"+0]TTT["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m    x 10965[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m     x 9559[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTT[#772+0]["cicero$global.m23332"+0]T["Object.o_eq"+0]["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m     x 1878[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]TnnTTT
[1;35m     x 3738[0m: ["Object.instanceOf"+0]T["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T
[1;35m   x 754091[0m: ["Object.instanceOf"+27]TTT
[1;35m        x 6[0m: ["Object.instanceOf"+27]TnnTTT["Object.instanceOf"+0]T
[1;35m       x 10[0m: ["Object.instanceOf"+27]TnnTTTT[#821+0]["cicero$global.m23356"+0]T["IntObject.i_eq"+0]T["Object.instanceOf"+0]T
[1;35m        x 3[0m: ["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]nTTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m        x 2[0m: ["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTnTTn["BigInteger.equals"+76]T["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m        x 2[0m: ["Object.instanceOf"+27]TnnTTTT["BigInteger.equals"+0]TTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m        x 1[0m: ["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]Tnn["BigInteger.compareMagnitude"+0]TTTTT["BigInteger.compareMagnitude"+70]nTTTT["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m        x 1[0m: ["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]TTT["BoolObjects.fromBool"+0]T["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m        x 1[0m: ["Object.instanceOf"+27]TnnTTTTTT[#827+0]["cicero$global.m23359"+0]T["IntObject.i_gt"+0]TT["BigInteger.compareTo"+0]TTn["BoolObjects.fromBool"+0]n["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m    x 13101[0m: ["Object.instanceOf"+27]Tnn["FrameObject.isExn"+0]TTTTT["Object.instanceOf"+0]T
[1;35m     x 2003[0m: ["Object.instanceOf"+27]Tnn["BytecodeFrame.evalBytecode"+65]Tn["FrameObject.isExn"+0]TTTTTTTTnT,br_table(17)["ArrayStack<Object>.peek"+0]nTT["FrameObject.assertType"+0]T["Object.instanceOf"+0]T
[1;35m       x 31[0m: ["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n
[1;35m        x 4[0m: ["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n
[1;35m        x 3[0m: ["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n
[1;35m        x 2[0m: ["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n
[1;35m        x 8[0m: ["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTT["BytecodeCompiler.addString"+7]n
[1;35m      x 110[0m: ["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]n
[1;35m x 15468657[0m: ["Strings.hash"+23]n
[1;35m      x 570[0m: ["Arrays.grow<int>"+59]nT
[1;35m       x 18[0m: ["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["TextReader.opt1"+0]n
[1;35m        x 6[0m: ["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTTT["Parser.readExpr"+3041]["TextReader.opt1"+0]n
[1;35m        x 3[0m: ["TextReader.advance1"+0]nTTTT[#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT["Vector<(AST, AST)>.put"+0]TTTTT["Parser.readExpr"+654]["TextReader.opt1"+0]n
[1;35m       x 26[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn[#765+0]["Maybe.Nothing<Keyword><Keyword>.isNothing"+0]n["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]
[1;35m       x 45[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(12)["Parser.readIdentifier"+0]
[1;35m        x 8[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(9)["Parser.readIdentifier"+0]
[1;35m       x 23[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(8)["Parser.readIdentifier"+0]
[1;35m        x 2[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT["TextReader.advance"+0]["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(0)["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]
[1;35m       x 15[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTT["Parser.readKeyword"+156]TTT["Parser.readKeyword"+75]T[#765+0]["Maybe.Nothing<Keyword><Keyword>.isNothing"+0]n["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]
[1;35m       x 33[0m: ["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTT["Parser.readKeyword"+75]T[#765+0]["Maybe.Nothing<Keyword><Keyword>.isNothing"+0]n["Parser.readExpr"+0]TTTTTTT["Parser.readQualifiedName"+0]
[1;35m      x 310[0m: ["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]nTT
[1;35m       x 57[0m: ["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnnnnnTTT
[1;35m        x 4[0m: ["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnnnnnTTT
[1;35m        x 2[0m: ["TextReader.peekRel"+0]nTT[#1012+0]["Parser.isIdentCharacter"+0]TnTTT
[1;35m      x 240[0m: ["TextReader.peekRel"+0]nTTT["Parser.readKeyword"+75]nnTn["Parser.readKeyword"+156]Tn
[1;35m      x 709[0m: ["TextReader.peekRel"+0]nTTT["Parser.readKeyword"+156]Tn
[1;35m       x 30[0m: ["TextReader.peekRel"+0]nTTT["Parser.readClassKeyword"+75]nnTn["Parser.readClassKeyword"+152]Tn
[1;35m     x 1418[0m: ["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]Tn
[1;35m      x 137[0m: ["TextReader.peekRel"+0]nTTn["Parser.readClassKeyword"+152]Tn
[1;35m     x 1283[0m: ["TextReader.reqN"+45]TnTTn
[1;35m       x 30[0m: ["Arrays.grow<AST>"+59]nT
[1;35m      x 324[0m: ["Arrays.copy<AST>"+52]nTTTT
[1;35m       x 15[0m: ["Arrays.copy<(AST, AST)>"+52]nTTTT
[1;35m     x 1075[0m: ["Arrays.copy<Array<byte>>"+52]nTTTT
[1;35m       x 17[0m: ["Arrays.copy<(Array<byte>, CodeObject)>"+52]nTTTT
[1;35m       x 38[0m: ["Arrays.copy<ASTData.Func>"+52]nTTTT
[1;35m       x 27[0m: ["Strings.parseLiteral"+82]nTTTTTT["StringBuilder.putc"+0]["StringBuilder.acquire"+0]TTTTT
[1;35m        x 6[0m: ["TextReader.advance"+0]["TextReader.at"+0]n["TextReader.opt1"+0]TT["Parser.readKeyword"+0]["TextReader.plus_rel"+0]["TextReader.peekRel"+0]nTTn["Parser.readKeyword"+156]TTn["TextReader.reqN"+0]TT["TextReader.reqN"+45]TT
[1;35m       x 36[0m: ["Ints.parseDecM"+163]nTTT
[1;35m       x 83[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstr"+0]
[1;35m       x 31[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 6[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 3[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT
[1;35m       x 10[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]TT
[1;35m        x 1[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 6[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 7[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 8[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 5[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 1[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 12[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 2[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT
[1;35m       x 10[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 6[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 22[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 26[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 4[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 7[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 3[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT
[1;35m        x 6[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 2[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 1[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 4[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.writeInstrDeferOperand"+0]
[1;35m       x 11[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT
[1;35m       x 26[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 30[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m       x 13[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT
[1;35m       x 10[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m        x 2[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 2[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn
[1;35m       x 50[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]TT
[1;35m       x 58[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrDeferOperand"+0]
[1;35m        x 1[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT
[1;35m        x 1[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]T["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]Tnn["HashMap<Array<byte>, StrObject>.[]"+0]TnT["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT
[1;35m      x 225[0m: ["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 3[0m: ["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 5[0m: ["BytecodeCompiler.fillHole"+0]TTT
[1;35m       x 30[0m: ["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 3[0m: ["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 2[0m: ["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 8[0m: ["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 6[0m: ["Vector<FileRange>.put"+0]TTTTTTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 6[0m: ["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 3[0m: ["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 39[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 3[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 5[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 4[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 26[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 19[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 30[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 18[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 2[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 3[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 4[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 55[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 7[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+2125]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 2[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+2125]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 7[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 3[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 6[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 10[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 2[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 3[0m: ["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m        x 1[0m: ["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]T["StrObjects.getStrObject"+0]["StrObjects.fromString"+0]["HashMap<Array<byte>, StrObject>.has"+0]Tnn["HashMap<Array<byte>, StrObject>.[]"+0]TnT["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT
[1;35m       x 84[0m: ["Vector<FileRange>.put"+0]TTTT
[1;35m       x 10[0m: ["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m        x 4[0m: ["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["Vector<int>.put"+0]TTTT["BytecodeCompiler.fillHole"+0]TTT["BytecodeCompiler.compileAST"+763]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn
[1;35m        x 3[0m: ["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn
[1;35m        x 3[0m: ["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT
[1;35m     x 1394[0m: ["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT
[1;35m      x 177[0m: ["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTT
[1;35m        x 2[0m: ["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]
[1;35m        x 1[0m: ["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn
[1;35m        x 1[0m: ["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]TTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn
[1;35m        x 1[0m: ["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn
[1;35m        x 2[0m: ["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn
[1;35m       x 44[0m: ["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTT
[1;35m      x 339[0m: ["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTTT
[1;35m     x 6388[0m: ["Ranges.dup<byte>"+40]nTT
[1;35m   x 545096[0m: ["Arrays.copy<Object>"+52]nTTTT
[1;35m        x 6[0m: ["Arrays.copy<ClassObject -> ClassObject>"+52]nTTTT
[1;35m     x 1534[0m: ["Arrays.copy<FileRange>"+52]nTTTT
[1;35m       x 20[0m: ["Arrays.grow<Object>"+59]nT
[1;35m   x 155608[0m: ["Object.initClass"+310]n["Vector<ClassObject>.put"+0]TTTTT
[1;35m   x 155568[0m: ["Object.initClass"+573]T["Object.initClass"+374]nTT["Object.initClass"+433]TTT
[1;35m   x 191916[0m: ["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTn
[1;35m   x 151384[0m: ["Ranges.reverse<Object>"+14]nTTTT
[1;35m    x 96027[0m: ["Ranges.reverse<ClassObject>"+14]nTTTT
[1;35m   x 251675[0m: ["Arrays.copy<ClassObject>"+52]nTTTT
[1;35m     x 4033[0m: ["TextReader.tokenFor"+52]nTTT
[1;35m      x 105[0m: ["Arrays.copy<(Array<byte>, Box<AccessMode>)>"+52]nTTTT
[1;35m       x 20[0m: ["Arrays.grow<(Array<byte>, Box<AccessMode>)>"+59]nT
[1;35m     x 2629[0m: ["Strings.split_internal<void>"+128]Tnn["cicero$closure3<(Array<byte>, byte -> bool, int) -> bool, Array<byte>, byte -> bool>.m23762"+0]T[#985+0]["Strings.split_char_cond"+0]TT["cicero$closure2<(byte, byte) -> bool, byte>.m23677"+0]["cicero$global.m23385"+0]T
[1;35m       x 68[0m: ["Vector<Array<byte>>.putr"+177]nTT
[1;35m        x 7[0m: ["Arrays.prepend<Array<byte>>"+89]nT
[1;35m       x 26[0m: ["DataWriter.putbbb"+0]["DataWriter.acquire"+0]TnTTTT
[1;35m     x 1270[0m: ["Arrays.grow<FileRange>"+59]nT
[1;35m       x 15[0m: ["Arrays.copy<int>"+52]nTTTT
[1;35m    x 95999[0m: ["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["Object.initClass"+573]nTT["HashMap<Array<byte>, int>.has"+0]TT[#996+0]["Strings.equal"+0]TTTTnT
[1;35m    x 95999[0m: ["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]nT["HashMap<Array<byte>, int>.[]="+0]TTT[#996+0]["Strings.equal"+0]TTTTnT
[1;35m       x 74[0m: ["Vector<Object>.putr"+177]nTT
[1;35m      x 114[0m: ["HashMap<Array<byte>, Box<AccessMode>>.apply"+71]n["HashMap<Array<byte>, Box<AccessMode>>.apply"+98]T
[1;35m      x 441[0m: ["HashMap<Array<byte>, Box<AccessMode>>.apply"+98]T["HashMap<Array<byte>, Box<AccessMode>>.apply"+71]n
[1;35m     x 5077[0m: ["Ranges.grow<byte>"+47]nTT
[1;35m     x 1439[0m: ["DataWriter.acquire"+0]TnTTTT["DataWriter.putbbb"+0]
[1;35m        x 5[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 2[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 4[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 2[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+552]TT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstrDeferOperand"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 2[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+1518]Tn["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)TTn["BytecodeCompiler.addString"+0]["BytecodeCompiler.addString"+7]T["Vector<Array<byte>>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 3[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTT["BytecodeCompiler.writeInstr"+0]["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(0)T["BytecodeCompiler.addConstant"+0]["Vector<Object>.put"+0]TTTT["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTT["BytecodeCompiler.compileAST"+552]n["BytecodeCompiler.compileAST"+0]TT,br_table(1)Tn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m        x 1[0m: ["DataWriter.acquire"+0]TnTTTTTT["Vector<FileRange>.put"+0]TTTTTn["BytecodeCompiler.addLocal"+0]["BytecodeCompiler.addLocal"+7]n["Vector<Array<byte>>.[]"+0]TT["Strings.equal"+0]TTTn["Strings.equal"+44]TTn["BytecodeCompiler.writeInstrWithOperand"+0]["DataWriter.putb"+0]
[1;35m   x 384654[0m: ["Arrays.map<(Array<byte>, Object), Object>"+44]n[#1026+0]["VirgilFrame.snd<Array<byte>, Object>"+0]T
[1;35m    x 35970[0m: ["BigInteger.longValue"+22]n["BigInteger.getInt"+0]TTn["BigInteger.signInt"+0]T
[1;35m    x 30354[0m: ["BigInteger.longValue"+22]n["BigInteger.getInt"+0]TTTTn
[1;35m    x 10388[0m: ["BigInteger.trace"+0]T["BigInteger.longValue"+0]
[1;35m    x 10388[0m: ["BigInteger.trace"+0]n["BigInteger.longValue"+0]
[1;35m     x 2808[0m: ["BigInteger.trace"+0]["BigInteger.longValue"+22]T["BigInteger.displayHex"+0]n
[1;35m    x 11420[0m: ["BigInteger.getInt"+0]TTTTnT
[1;35m     x 1998[0m: ["BigInteger.getInt"+0]TTTTT["BigInteger.firstNonzeroIntNum"+0]T["BigInteger.firstNonzeroIntNum"+29]nTTTnT
[1;35m     x 3032[0m: ["BigInteger.getInt"+0]TTn["BigInteger.signInt"+0]TT
[1;35m     x 2992[0m: ["BigInteger.xor"+60]n["BigInteger.getInt"+0]TTTTn
[1;35m     x 9462[0m: ["BigInteger.or"+60]n["BigInteger.getInt"+0]TTTTn
[1;35m     x 1998[0m: ["BigInteger.and"+60]n["BigInteger.getInt"+0]TTTTn
[1;35m     x 1998[0m: ["BigInteger.and"+60]n["BigInteger.getInt"+0]TTTTT["BigInteger.firstNonzeroIntNum"+0]T["BigInteger.firstNonzeroIntNum"+29]nTTTn
[1;35m    x 16402[0m: ["BigInteger.equals"+76]nTTn
[1;35m     x 6478[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTTTT
[1;35m     x 1998[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTTn["Ints.popcnt"+0]["Ints.popcnt"+11]n["BigInteger.bitLength"+90]TnT
[1;35m     x 1954[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTTnTT
[1;35m       x 10[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTTnnTT
[1;35m     x 1984[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTnnnTT
[1;35m      x 728[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTnnTTT
[1;35m      x 200[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTnTnTT
[1;35m       x 66[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TTT["BigInteger.bitLengthForInt"+0]["BigInteger.numberOfLeadingZeros"+0]TTnTTTT
[1;35m     x 3032[0m: ["BigInteger.intLength"+0]["BigInteger.bitLength"+0]TnT
[1;35m     x 1575[0m: ["BigInteger.compareMagnitude"+70]nTTn
[1;35m     x 1072[0m: ["BigInteger.stripLeadingZeros"+9]TnTn
[1;35m     x 3798[0m: ["BigInteger.subtractMag"+65]nTTTTT
[1;35m     x 1998[0m: ["BigInteger.makePositive"+237]TnTT
[1;35m     x 5994[0m: ["Ints.popcnt"+11]TT
[1;35m     x 1998[0m: ["Ints.popcnt"+11]Tn
[1;35m        x 4[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Opt>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Opt>.[]"+121]nn
[1;35m       x 20[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]n
[1;35m   x 325525[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.has"+113]Tn
[1;35m   x 325525[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]"+121]nn
[1;35m      x 242[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]Tn
[1;35m      x 241[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nn
[1;35m       x 32[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]n
[1;35m   x 456721[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]nT["HashMap<Array<byte>, int>.[]="+0]TTT
[1;35m   x 657872[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]Tn
[1;35m       x 96[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]TTn["HashMap<Array<byte>, int>.[]"+0]TT
[1;35m   x 264692[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]n
[1;35m   x 237612[0m: [#996+0]["Strings.equal"+0]TTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]"+122]nn
[1;35m       x 29[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]Tn
[1;35m       x 28[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nn
[1;35m    x 95999[0m: [#996+0]["Strings.equal"+0]TTTTnnT["HashMap<Array<byte>, int>.[]="+0]TTT
[1;35m   x 373756[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, int>.has"+114]nT["HashMap<Array<byte>, int>.[]="+0]TTT
[1;35m   x 111179[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, int>.has"+114]Tn
[1;35m       x 40[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, int>.has"+114]TTn["HashMap<Array<byte>, int>.[]"+0]TT
[1;35m   x 123624[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Object>.has"+113]Tn
[1;35m   x 123624[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, Object>.[]"+121]nn
[1;35m   x 111144[0m: [#996+0]["Strings.equal"+0]TTTTn["HashMap<Array<byte>, int>.[]"+122]nn
[1;35m       x 17[0m: [#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, Object>.[]="+260]n
[1;35m        x 7[0m: [#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]n
[1;35m       x 35[0m: [#996+0]["Strings.equal"+0]TTTTTT["HashMap<Array<byte>, int>.[]="+265]n
[1;35m        x 2[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Opt>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Opt>.[]"+121]nn
[1;35m       x 10[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]="+260]n
[1;35m     x 7732[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.has"+113]Tn
[1;35m     x 7732[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Object>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Object>.[]"+121]nn
[1;35m       x 60[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.has"+114]Tn
[1;35m       x 62[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nn
[1;35m        x 2[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, Box<AccessMode>>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, Box<AccessMode>>.[]="+265]n
[1;35m   x 145372[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]nT["HashMap<Array<byte>, int>.[]="+0]TTT
[1;35m   x 248737[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]Tn
[1;35m       x 18[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.has"+114]TTn["HashMap<Array<byte>, int>.[]"+0]TT
[1;35m   x 181761[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]="+265]n
[1;35m    x 30633[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTnT["HashMap<Array<byte>, int>.dohash"+0][#994+0]["Strings.hash"+0]T["Strings.hash"+23]TTTT["HashMap<Array<byte>, int>.[]"+122]nn
[1;35m        x 2[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, Box<AccessMode>>.has"+114]Tn
[1;35m        x 3[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+122]nn
[1;35m    x 72697[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, int>.has"+114]nT["HashMap<Array<byte>, int>.[]="+0]TTT
[1;35m   x 135964[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, int>.has"+114]Tn
[1;35m        x 6[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, int>.has"+114]TTn["HashMap<Array<byte>, int>.[]"+0]TT
[1;35m    x 26935[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTn["HashMap<Array<byte>, int>.[]"+122]nn
[1;35m        x 4[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, Object>.[]="+260]n
[1;35m    x 72686[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TnTTTTT["HashMap<Array<byte>, int>.[]="+265]n
[1;35m      x 328[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTn["HashMap<Array<byte>, Box<AccessMode>>.[]"+0]TT
[1;35m   x 341343[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTnT["HashMap<Array<byte>, Object>.[]"+0]TT
[1;35m   x 470775[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTn["HashMap<Array<byte>, int>.[]"+0]TT
[1;35m    x 14108[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTn["HashMap<Array<byte>, Object>.[]"+0]TT
[1;35m    x 14108[0m: [#996+0]["Strings.equal"+0]TTTn["Strings.equal"+44]TTTT["FrameObject.isExn"+0]TT["Object.getField"+0]TT["HashMap<Array<byte>, int>.has"+0]TT
[1;35m      x 635[0m: [#1012+0]["Parser.isIdentCharacter"+0]TnnnnnnnnnnnT["TextReader.plus_rel"+51]nTT
[1;35m     x 2482[0m: [#1012+0]["Parser.isIdentCharacter"+0]Tnnnnnnnnnnn["TextReader.plus_rel"+51]nTT
[1;35m      x 488[0m: [#1014+0]["Parser.isFullQualCharacter"+0]TnnnnnnnnnnT["TextReader.plus_rel"+51]nTT
[1;35m     x 2256[0m: [#1014+0]["Parser.isFullQualCharacter"+0]Tnnnnnnnnnn["TextReader.plus_rel"+51]nTT
[1;35m       x 59[0m: [#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]n["Parser.readExpr"+0]n["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT
[1;35m      x 144[0m: [#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT
[1;35m       x 28[0m: [#1016+0]["Parser.skipWhitespaceAndComments"+0]T["Parser.skipWhitespaceAndComments"+51]nTTTTTTTT["TextReader.at"+0]TnTT[#766+0]["Maybe.Just<Keyword><Keyword>.isNothing"+0]T[#767+0]["Maybe.Just<Keyword><Keyword>.fromJust"+0],br_table(6)["TextReader.req1"+0]n["TextReader.advance1"+0]nTTTT

class BoolObject(val: bool) extends Object #unboxed {
	def display() -> string { return if(val, "true", "false"); }
	def isTrue()  -> bool   { return val; }

	def b_not() -> Result { 
		return Result.OK(BoolObjects.fromBool(!val));
	}
	def b_and(that: BoolObject) -> Result {
		return Result.OK(BoolObjects.fromBool(this.val && that.val));
	}
	def b_or(that: BoolObject) -> Result {
		return Result.OK(BoolObjects.fromBool(this.val || that.val));
	}
	def b_display() -> Result {
		return Result.OK(StrObjects.fromString(display()));
	}
}


component BoolObjects {
	/* canonical instances of bool values */
	def trueObject  = BoolObject.new(true);
	def falseObject = BoolObject.new(false);

	def fromBool(b: bool) -> BoolObject {
		return if(b, trueObject, falseObject);
	}
}


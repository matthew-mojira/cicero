enum Builtin(id: string, val: Value) {
	TRUE    ("true",     BoolValues.trueValue),
	FALSE   ("false",    BoolValues.falseValue),
	INT     ("int" ,     TypeValues.getTypeValue(Type.Int)),
	BOOL    ("bool",     TypeValues.getTypeValue(Type.Bool)),
	FUNC    ("func",     TypeValues.getTypeValue(Type.Func)),
	STR     ("str" ,     TypeValues.getTypeValue(Type.Str)),
	TYPE    ("type",     TypeValues.getTypeValue(Type.Type)),
	POOPCRAP("poopcrap", TypeValues.getTypeValue(Type.PoopCrap)),
	FRAME   ("frame",    TypeValues.getTypeValue(Type.Frame)),
	EXPR    ("expr",     TypeValues.getTypeValue(Type.Expr)),
 	V_TYPEOF("typeof",   FuncValues.fromBuiltin(null, Values.typeof)),
 	V_PRINT ("print",    FuncValues.fromBuiltin(null, Values.print)), 
 	VV_EQ   ("=",        FuncValues.fromBuiltin(null, Values.eq)), 
 	VV_NEQ  ("!=",       FuncValues.fromBuiltin(null, Values.neq)), 
 	II_ADD  ("+",        FuncValues.fromBuiltin(ii, IntValues.add)), 
 	II_SUB  ("-",        FuncValues.fromBuiltin(ii, IntValues.sub)), 
 	II_MUL  ("*",        FuncValues.fromBuiltin(ii, IntValues.mul)), 
 	II_DIV  ("/",        FuncValues.fromBuiltin(ii, IntValues.div)),
 	SS_ADD  ("concat",   FuncValues.fromBuiltin(ss, StrValues.concat)), 
}

def ii: Array<Type> = [Type.Int, Type.Int];
def ss: Array<Type> = [Type.Str, Type.Str];

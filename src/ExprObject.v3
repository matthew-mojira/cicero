/* First-class expressions, which may allow translation into other forms (e.g.
 * WebAssembly for other evaluation methods.
 */
class ExprObject(impl: Impl) extends Object {
	new() super(ExprObjects.classExpr) {}

	def typeof()  -> Type   { return Type.Expr; }
	def display() -> string { return "<expr>"; }
	def isTrue()  -> bool   { return true; }
}

type Impl {
	case AST(expr: Expr);
	case Virgil(func: Range<Object> -> (Object, bool));
}

component ExprObjects {
	def fromBuiltin(func: Range<Object> -> (Object, bool)) -> ExprObject {
		return ExprObject.new(Impl.Virgil(func));
	}
	def classExpr = ClassObject.new(Objects.classBase, "expr", []);
}

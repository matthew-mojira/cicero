class FuncObject(params: Array<string>, expr: ExprObject) extends Object {
	new() super(FuncObjects.classFunc) {}

	def typeof()  -> Type   { return Type.Func; }
	def display() -> string { return "<func>"; }
	def isTrue()  -> bool   { return true; }
}

component FuncObjects {
	def fromBuiltin(params: int, func: Range<Object> -> (Object, bool)) -> FuncObject {
		def arr: Array<string> = Array.new(params);
		for (i < params) {
			arr[i] = Strings.format1("arg%d", i);
		}
		return FuncObject.new(arr, ExprObject.new(Impl.Virgil(func)));
	}
	def classFunc = ClassObject.new(Objects.classBase, "func", []);
}

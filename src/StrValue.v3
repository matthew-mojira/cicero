class StrValue(str: string) extends Value {
	private new () {}

	def typeof()  -> Type   { return Type.Str; }
	def display() -> string { return Strings.format1("\"%s\"", str); }
	def isTrue()  -> bool   { return true; }
}

component StrValues {
	/* canonical instances of strings */
	def strValues: HashMap<string, StrValue> = Strings.newMap();
	def getStrValue(str: string) -> StrValue {
		if (strValues.has(str)) return strValues[str];
		def newStr = StrValue.new(str);
		strValues[str] = newStr;
		return newStr;
	}

	def concat(args: Range<Value>) -> (Value, bool) {
		def str1 = StrValue.!(args[0]);
		def str2 = StrValue.!(args[1]);
		return (getStrValue(Arrays.concat(str1.str, str2.str)), false);
	}
}

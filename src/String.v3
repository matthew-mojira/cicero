class StrObject(str: string) extends Object {
	new () {
		if (CiceroOptions.sanityChecks) {
			if (str == null)
				System.error("string error", "null passed to constructor");
		}
	}

	def display() -> string { return Strings.format1("\"%s\"", str); }
	def isTrue()  -> bool   { return true; }

	/* methods */
	def s_concat(str: StrObject) => Result.OK(StrObjects.fromString(Arrays.concat(this.str, str.str)));

	def s_display() => Result.OK(StrObjects.fromString(display()));
}

component StrObjects {
	/* canonical instances of strings */
	def strObjects: HashMap<string, StrObject> = Strings.newMap();
	// FIXME deprecated, rename everything to `fromString`
	def getStrObject(str: string) -> StrObject {
		return fromString(str);
	}
	def fromString(str: string) -> StrObject {
		if (CiceroOptions.sanityChecks) {
			if (str == null)
				System.error("string error", "null passed to fromString");
		}
		if (strObjects.has(str)) return strObjects[str];
		def newStr = StrObject.new(str);
		strObjects[str] = newStr;
		return newStr;
	}
}

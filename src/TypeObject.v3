class TypeObject(val: Type) extends Object {
	private new () {}

	def typeof()  -> Type   { return Type.Type; }
	def display() -> string { return val.display(); }
	def isTrue()  -> bool   { return true; }
}

component TypeObjects {
	/* one value per type */
	def typeObjects = HashMap<Type, TypeObject>.new(hash, Type.==);
	def getTypeObject(val: Type) -> TypeObject {
		if (typeObjects.has(val)) return typeObjects[val];
		def newType = TypeObject.new(val);
		typeObjects[val] = newType;
		return newType;
	}
}

def hash(t: Type) -> int { return int.!(Type.tag(t)); }

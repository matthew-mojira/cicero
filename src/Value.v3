type Value {
	case Int(int_: int) {
		def typeof() -> Type { return Type.Int; }
		def display() -> string { return Strings.format1("%d", int_); }
	}
	case Bool(bool_: bool) {
		def typeof() -> Type { return Type.Bool; }
		def display() -> string { return if(bool_, "true", "false"); }
	}
	case Func(argc: int, func: Range<Value> -> Value) {
		def typeof() -> Type { return Type.Func; }
		def display() -> string { return "<func>"; }
	}
	case Str(str: string) {
		def typeof() -> Type { return Type.Str; }
		def display() -> string { return str; }
	}
	case Type(type_: Type) {
		def typeof() -> Type { return Type.Type; }
		def display() -> string { return type_.display(); }
	}
	case PoopCrap {
		def typeof() -> Type { return Type.PoopCrap; }
		def display() -> string { return "poopcrap"; }
	}

	def typeof() -> Type;
	def display() -> string;
}
